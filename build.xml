<project xmlns:ivy="antlib:org.apache.ivy.ant" name="feedrdr" default="main" basedir=".">

	<taskdef uri="antlib:org.apache.ivy.ant" resource="org/apache/ivy/ant/antlib.xml" classpath="${user.home}/.ant/lib/ivy.jar" />

	<!-- Project Structure -->
	<condition property="build.env" value="${build.env}" else="local">
		<isset property="build.env" />
	</condition>
	<property name="jdk.version" value="1.8" />
	<property name="projectName" value="feedrdr" />
	<property name="src.dir" location="src" />
	<property name="resources.dir" location="etc/deploy/${build.env}" />
	<property name="web.dir" value="src/main/web" />
	<property name="web.classes.dir" location="target/classes" />
	<property name="target.dir" location="target" />
	<property name="lib.dir" value="target/lib" />
	<property name="war.name" value="ROOT" />

	<!-- ivy start -->
	<target name="resolve" description="retrieve dependencies with ivy">
		<ivy:retrieve log="quiet" />
		<ivy:cachepath pathid="compile.path" conf="compile" />
		<ivy:cachepath pathid="runtime.path" conf="runtime" />
		<ivy:cachepath pathid="test.path" conf="test" />
		<pathconvert property="classpathProp" refid="runtime.path" />
	</target>

	<!-- install ivy if you don't have ivyide-->
	<target name="ivy" description="Install ivy">
		<mkdir dir="${user.home}/.ant/lib" />
		<get dest="${user.home}/.ant/lib/ivy.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar" />
	</target>
	<!-- ivy end -->

	<!-- Compile Java source from ${src.dir} and output it to ${web.classes.dir} -->
	<target name="compile" depends="init, resolve" description="compile source code">
		<mkdir dir="${web.classes.dir}" />
		<javac destdir="${web.classes.dir}" source="${jdk.version}" target="${jdk.version}" debug="true" includeantruntime="false" classpathref="runtime.path">
			<src path="${src.dir}" />
		</javac>
	</target>

	<!-- Copy *.xml or *.properties from ${resources.dir} to ${web.classes.dir} -->
	<target name="copy-resources" description="copy Java resources like xml and properties files">
		<echo message="copying resources from ${resources.dir}" />
		<copy todir="${web.classes.dir}">
			<fileset dir="${resources.dir}">
				<exclude name="WEB-INF/web.xml" />
				<include name="**/*.xml" />
				<include name="**/*.properties" />
				<include name="**/templates/**" />
			</fileset>
		</copy>
	</target>

	<!-- Create the final WAR file for deployment -->
	<target name="package" depends="clean, compile, copy-resources" description="create a war file">

		<!-- ivy get dependencies and put it in ${lib.dir} -->
		<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]" conf="compile" />

		<war destfile="${target.dir}/${war.name}.war" webxml="${resources.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}" />
			<lib dir="${lib.dir}" />
			<classes dir="${web.classes.dir}" />
		</war>
	</target>

	<!-- Create folders -->
	<target name="init">
		<mkdir dir="${target.dir}" />
		<mkdir dir="${web.classes.dir}" />
	</target>

	<!-- Delete folders -->
	<target name="clean" description="clean up">
		<delete dir="${target.dir}/classes" />
		<delete dir="${target.dir}" />
	</target>

	<target name="main" depends="package">
		<echo>Created ${war.name}.war for ${build.env} environment</echo>
	</target>

</project>