<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:openSearch="http://a9.com/-/spec/opensearchrss/1.0/" xmlns:blogger="http://schemas.google.com/blogger/2008" xmlns:georss="http://www.georss.org/georss" xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
  <id>tag:blogger.com,1999:blog-5416726460697111362</id>
  <updated>2013-04-26T09:14:11.005-07:00</updated>
  <category term="coil gun"/>
  <category term="laser"/>
  <category term="processing"/>
  <category term="android open"/>
  <category term="oscilloscope"/>
  <category term="etherten"/>
  <category term="screw shield"/>
  <category term="memoire"/>
  <category term="uv"/>
  <category term="robot"/>
  <category term="slotcar"/>
  <category term="hid"/>
  <category term="uno"/>
  <category term=".net gadgeteer"/>
  <category term="breakout"/>
  <category term="snootlabs"/>
  <category term="attiny"/>
  <category term="freetronics"/>
  <category term="vince cable"/>
  <category term="adk"/>
  <category term="binary clock"/>
  <category term="library"/>
  <category term="ioio"/>
  <category term="pcb"/>
  <category term="sbc"/>
  <category term="lcd shield"/>
  <category term="leostick"/>
  <category term="sparkfun"/>
  <category term="adafruit"/>
  <category term="timer"/>
  <category term="shield"/>
  <category term="28J60"/>
  <category term="snootlab"/>
  <category term="python"/>
  <category term="zombadge"/>
  <category term="keyboard"/>
  <category term="adc"/>
  <category term="dfrobot"/>
  <category term="direction finder"/>
  <category term="rtc"/>
  <category term="arduino"/>
  <category term="pulse"/>
  <category term="ethernet"/>
  <category term="hack"/>
  <category term="open accessory"/>
  <category term="brakes"/>
  <category term="radio"/>
  <category term="fm radio"/>
  <category term="fignition"/>
  <category term="tea5767"/>
  <category term="usb"/>
  <category term="programming"/>
  <category term="oximeter"/>
  <category term="handbag"/>
  <category term="coilgun"/>
  <category term="i2c"/>
  <category term="arduino android conference"/>
  <category term="book"/>
  <category term="servo"/>
  <category term="lilypad"/>
  <category term="raspberry pi"/>
  <category term="slot car"/>
  <category term="grammar fewer less"/>
  <category term="analog input"/>
  <category term="fablab"/>
  <category term="gps"/>
  <category term="isp"/>
  <category term="bluetooth"/>
  <category term="copyright"/>
  <category term="android"/>
  <category term="si4703"/>
  <category term="usbdroid"/>
  <category term="wireless"/>
  <category term="ableton"/>
  <category term="laser cutter"/>
  <category term="steampunk"/>
  <category term="sensor"/>
  <category term="leonardo"/>
  <category term="led"/>
  <category term="electronic project book"/>
  <category term="gpio"/>
  <category term="PoE"/>
  <category term="solar"/>
  <title type="text">Dr. Monk's DIY Electronics Blog</title>
  <subtitle type="html">Open Source hardware, Arduino, IOIO, .NET Gadgeteer, DIY electronic construction, reviews, projects, how-tos and recipes.</subtitle>
  <link rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml" href="http://www.doctormonk.com/feeds/posts/default"/>
  <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default"/>
  <link rel="alternate" type="text/html" href="http://www.doctormonk.com/"/>
  <link rel="hub" href="http://pubsubhubbub.appspot.com/"/>
  <link rel="next" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default?start-index=26&amp;max-results=25"/>
  <author>
    <name>Simon Monk</name>
    <email>noreply@blogger.com</email>
    <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
  </author>
  <generator version="7.00" uri="http://www.blogger.com">Blogger</generator>
  <openSearch:totalResults>88</openSearch:totalResults>
  <openSearch:startIndex>1</openSearch:startIndex>
  <openSearch:itemsPerPage>25</openSearch:itemsPerPage>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-7967995889714090280</id>
    <published>2013-04-04T00:35:00.000-07:00</published>
    <updated>2013-04-04T01:12:30.970-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="adc"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="analog input"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">Quick2Wire I2C Analog and Raspberry Pi</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;This is a review of the &lt;a href="http://quick2wire.com/"&gt;Quick2Wire&lt;/a&gt; &lt;a href="http://quick2wire.com/products/"&gt;Port Expander Combo kit&lt;/a&gt; and the &lt;a href="http://quick2wire.com/"&gt;Quick2Wire Analog Board&lt;/a&gt;. Both kits can be bought from a variety of sources, including&amp;nbsp;&lt;a href="http://cpc.farnell.com/quick2wire/combo-pe-01/port-expander-combo-kit-rpi/dp/SC12941?in_merch=New%20Products"&gt;CPC&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="http://www.skpang.co.uk/catalog/raspberry-pi-quick2wire-boards-c-240_248.html"&gt;SKPang&lt;/a&gt;&amp;nbsp;in the UK.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/--H5euUv8LTI/UVxwcnX2RQI/AAAAAAAAE3A/aM6OSmY0uKc/s1600/combo+and+analog.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="165" src="http://3.bp.blogspot.com/--H5euUv8LTI/UVxwcnX2RQI/AAAAAAAAE3A/aM6OSmY0uKc/s400/combo+and+analog.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The picture above shows the main interface board complete with ribbon cable for attaching it to a Raspberry Pi's GPIO header. On the right is the Analog board. The port expander board (included in the 'conbo' kit with the huge interface board, is a similar size and all the boards have 6 pin headers for I2C designed to be daisy-chained together using the cables supplied.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;All three boards come as through-hole kits that are easy to assemble. Even easier if you rearrange the assembly instructions and solder the components in the order of those that lie lower to the boards first, rather than the apparently random order specified in the &lt;a href="http://quick2wire.com/wp-content/uploads/2013/01/interface-board-v0-7-assembly-guide.pdf"&gt;instructions&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-UsA9i77ZVf0/UVxz7kiTwCI/AAAAAAAAE3Q/Y5Gctj6lLHg/s1600/kit.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="177" src="http://2.bp.blogspot.com/-UsA9i77ZVf0/UVxz7kiTwCI/AAAAAAAAE3Q/Y5Gctj6lLHg/s320/kit.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The analog board is a nice size and has the pair of I2C connectors, a DIP switch to select the I2C address and various other quite useful headers.&amp;nbsp;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-YAwQDZ5K1y8/UVx0Yuu34gI/AAAAAAAAE3Y/B1ibcR_y3cM/s1600/analog.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="261" src="http://2.bp.blogspot.com/-YAwQDZ5K1y8/UVx0Yuu34gI/AAAAAAAAE3Y/B1ibcR_y3cM/s320/analog.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Mini Project&lt;/b&gt;&lt;/div&gt;&lt;div&gt;Its always good to see how these things work, so I decided to try out an analog input, using just a pot (variable resistor).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-t-rvWoHTSeU/UV0pMlChoII/AAAAAAAAE3o/tcwG8ZsM07E/s1600/pot.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="290" src="http://4.bp.blogspot.com/-t-rvWoHTSeU/UV0pMlChoII/AAAAAAAAE3o/tcwG8ZsM07E/s640/pot.jpg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;As you can see, a fair amount of desk space is required for this! The ribbon cables and sockets all have notches, so the only place that you beed to make sure you have the cable the right way around is on the Raspberry Pi.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The pot is wired to the analog board with one wiper to VREF, the other wiper to AGND and the slider (middle connection) to AIN0.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The AGND and VREF jumpers are both bridged and the DIP switches are in their original position.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Quick2Wire have their own Python library, but being familiar with I2C, I decided I didn't want to figure it out, and just used the standard stuff. &lt;a href="http://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c"&gt;This tutorial will get you set up using I2C&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Then, to make sure the device is working run:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;$sudo i2cdetect -y 1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;0 &amp;nbsp;1 &amp;nbsp;2 &amp;nbsp;3 &amp;nbsp;4 &amp;nbsp;5 &amp;nbsp;6 &amp;nbsp;7 &amp;nbsp;8 &amp;nbsp;9 &amp;nbsp;a &amp;nbsp;b &amp;nbsp;c &amp;nbsp;d &amp;nbsp;e &amp;nbsp;f&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;00: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;-- -- -- -- -- -- -- -- -- -- -- -- --&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;40: -- -- -- -- -- -- -- -- 48 -- -- -- -- -- -- --&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;70: -- -- -- -- -- -- -- -- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;This shows that the PCF8591 is on I2C address 48. If you have a revision 1 board use "-y 0" rather than "-y 1".&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The following code is lifted unaltered from GrumpyMike (Mike Cook) &lt;a href="http://www.raspberrypi.org/phpBB3/viewtopic.php?f=42&amp;amp;t=14093&amp;amp;p=146643&amp;amp;hilit=PCF8591#p146643"&gt;here&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Just paste it into a file called "pot.py".&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;#Read a value from analogue input 0&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;#in A/D in the PCF8591P @ address 0x48&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;from smbus import SMBus&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;bus = SMBus(1)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;print("Read the A/D")&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;print("Ctrl C to stop")&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;bus.write_byte(0x48, 0) # set control register to read channel 0&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;last_reading =-1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;while(0 == 0): # do forever&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp;reading = bus.read_byte(0x48) # read A/D&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp;if(abs(last_reading - reading) &amp;gt; 2):&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; print(reading)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; last_reading = reading&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Again, if you have an older revision 1 Pi, change &amp;nbsp;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;bus = SMBus(1)&lt;/span&gt;&amp;nbsp;to be &amp;nbsp;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;bus = SMBus(0)&lt;/span&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Run the program and you should see a new reading every time you move the pot knob.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;$ sudo python pot.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;Read the A/D&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;Ctrl C to stop&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;150&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;147&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;144&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;141&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;138&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;135&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;132&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;129&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;126&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;b&gt;Likes&lt;/b&gt;&lt;/div&gt;&lt;div&gt;DIP switches to select I2C address.&lt;/div&gt;&lt;div&gt;The daisy chain I2C idea, lets see some nice displays etc. in this format please.&lt;/div&gt;&lt;div&gt;I haven't mentioned that the expansion board also breaks out SPI and Serial connections from the Pi.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Dislikes&lt;/b&gt;&lt;/div&gt;&lt;div&gt;Their own library for all the I2C things. The 'standard' code works fine.&lt;/div&gt;&lt;div&gt;The interface is huge and largely devoid of any active components, it could easily be half the size.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;/div&gt;&lt;div&gt;This has the potential to grow into a really nice system, a bit like .Net Gadgeteer for Pi. But if you just want to have analog inputs on your&amp;nbsp;Raspberry&amp;nbsp;Pi then just stick a PCF8591 chip onto some breadboard and use jumper wires!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/7967995889714090280/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=7967995889714090280" title="2 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/7967995889714090280"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/7967995889714090280"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2013/04/quick2wire-i2c-analog-and-raspberry-pi.html" title="Quick2Wire I2C Analog and Raspberry Pi"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/--H5euUv8LTI/UVxwcnX2RQI/AAAAAAAAE3A/aM6OSmY0uKc/s72-c/combo+and+analog.jpg" height="72" width="72"/>
    <thr:total>2</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-9058858949143076057</id>
    <published>2013-03-22T06:27:00.001-07:00</published>
    <updated>2013-03-22T14:37:55.689-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="arduino"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="leonardo"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="leostick"/>
    <title type="text">Leostick Review and Mini-Project</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;The &lt;a href="http://www.freetronics.com/products/leostick"&gt;Leostick&lt;/a&gt; is an Arduino Leonardo compatible board from &lt;a href="http://www.freetronics.com/"&gt;Freetronics&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-r-8ov5bQvyo/UUxT3-wx14I/AAAAAAAAE2A/p-hWdF32GUQ/s1600/leostick.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="162" src="http://2.bp.blogspot.com/-r-8ov5bQvyo/UUxT3-wx14I/AAAAAAAAE2A/p-hWdF32GUQ/s400/leostick.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;There are a number of things that make this board a great deal more than a clone:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;/div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Its smaller than the Uno / Loenardo sized Arduinos. In fact about the size of a USB flash drive.&lt;/li&gt;&lt;li&gt;It has a USB plug built onto the PCB, so you can plug it straight into the side of your computer to program it. Or use an USB extension lead.&lt;/li&gt;&lt;li&gt;It has a built-in RGB LED.&lt;/li&gt;&lt;li&gt;Being a Leonardo type board means that you can have it emulate a keyboard and mouse!&lt;/li&gt;&lt;li&gt;Flip it over and it has a piezo sounder on the back.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-k1x9SPyJCEc/UUxU66XI7bI/AAAAAAAAE2I/eadiu1BWS0M/s1600/leostick_back.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="134" src="http://2.bp.blogspot.com/-k1x9SPyJCEc/UUxU66XI7bI/AAAAAAAAE2I/eadiu1BWS0M/s320/leostick_back.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;This all means that you can actually have quite a lot of fun with the Leostick straight out of its anti-static bag. However, the fun does not end there. Oh no, there is even more. The Leostick comes with a set of header pins and yes, they also sell little mini proto-shields that you can fit onto the Leostick.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-j9D7HbMY0Co/UUxWmfF9yfI/AAAAAAAAE2Q/qXqDejeus5U/s1600/shield_kit.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="167" src="http://2.bp.blogspot.com/-j9D7HbMY0Co/UUxWmfF9yfI/AAAAAAAAE2Q/qXqDejeus5U/s320/shield_kit.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-FsK8odj9uEc/UUxWvIin0SI/AAAAAAAAE2Y/TjDxlUVGlfk/s1600/kit.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="192" src="http://3.bp.blogspot.com/-FsK8odj9uEc/UUxWvIin0SI/AAAAAAAAE2Y/TjDxlUVGlfk/s320/kit.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Mini Project&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;To try out the Leostick, I decided to have a go at a little project from the second edition of my book '&lt;a href="http://www.amazon.com/30-Arduino-Projects-Evil-Genius/dp/0071817727"&gt;30 Arduino Projects for the Evil Genius&lt;/a&gt;' - out May 2013. This project was originally designed for an Arduino Leonardo.&lt;br /&gt;&lt;br /&gt;It has two buttons, and when you press one it generates an obscure password and stores it in EEPROM. When you press the other button, it emulates a keyboard and types the password for you, wherever your password happens to be.&lt;br /&gt;&lt;br /&gt;This proved to be really easy to do. Here is the finished result on a Leoshield.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-1kvc_tMMjgA/UUxXu7tB1UI/AAAAAAAAE2g/nTBlPQXk91Q/s1600/finished.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="259" src="http://3.bp.blogspot.com/-1kvc_tMMjgA/UUxXu7tB1UI/AAAAAAAAE2g/nTBlPQXk91Q/s320/finished.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;i&gt;Step 1.&lt;/i&gt;&lt;br /&gt;Solder the header sockets onto the Leostick and the header pins onto the Leoshield.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-JTDhuHoa96Q/UUxYjhQOObI/AAAAAAAAE2o/CTF43GK6kBI/s1600/leo+and+shield.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="227" src="http://3.bp.blogspot.com/-JTDhuHoa96Q/UUxYjhQOObI/AAAAAAAAE2o/CTF43GK6kBI/s400/leo+and+shield.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;It is easier to solder the header pins onto the shield if you first push them into the sockets on the Leostick.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;Step 2.&amp;nbsp;&lt;/i&gt;&lt;br /&gt;Solder the click switches and wires.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-wkkSej0gsN4/UUxZPmuy9MI/AAAAAAAAE2w/GaA38RRRdDU/s1600/shield.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="384" src="http://2.bp.blogspot.com/-wkkSej0gsN4/UUxZPmuy9MI/AAAAAAAAE2w/GaA38RRRdDU/s640/shield.jpg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Make sure you get the switches the right way around. Look carefully at the diagram above. One way around there will be two unused holes between pins (left to right) the other way (vertically) there will be just one.&lt;br /&gt;&lt;br /&gt;The bare wire at the bottom connects GND to one side of both switches. The other sides of the switches are connected to D7 and D6.&lt;br /&gt;&lt;br /&gt;Here is the sketch, ignore the bit of paper that comes with the Leostick saying you need to download something, you don't, just use it like you would an Arduino Leonardo.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;#include &amp;lt;EEPROM.h&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;int greenPin = 9;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;int soundPin = 11;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;int typeButton = 7;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;int generateButton = 6;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;int passwordLength = 10;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;char letters[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;void setup()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; pinMode(greenPin, OUTPUT);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; pinMode(soundPin, OUTPUT);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; pinMode(typeButton, INPUT_PULLUP);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; pinMode(generateButton, INPUT_PULLUP);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; Keyboard.begin();&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;void loop()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; if (digitalRead(typeButton) == LOW)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; notify(1);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; typePassword();&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; if (digitalRead(generateButton) == LOW)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; notify(3);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; generatePassword();&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; delay(300);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;void typePassword()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; for (int i = 0; i &amp;lt; passwordLength; i++)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; Keyboard.write(EEPROM.read(i));&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; Keyboard.write('\n');&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;void generatePassword()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; randomSeed(millis() * analogRead(A0));&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; for (int i = 0; i &amp;lt; passwordLength; i++)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; EEPROM.write(i, randomLetter());&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;char randomLetter()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp;int n = strlen(letters);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp;int i = random(n);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp;return letters[i];&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;void notify(int n)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; for (int i = 0; i &amp;lt; n; i++)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; tone(soundPin, 330);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; digitalWrite(greenPin, HIGH);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; delay(200);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; noTone(soundPin);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; digitalWrite(greenPin, LOW);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; delay(200);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;For good measure the sketch uses both the built-in RGB LED and the buzzer to provide feedback when you press a button.&lt;br /&gt;&lt;br /&gt;To test it, just put your cursor in a blank document in an editor or wordprocessor. Pressing the button furthest away from the USB plug will generate a new password and beep three times, while flashing the LED green.&lt;br /&gt;&lt;br /&gt;Pressing the other button will write out the password. So, now you can carry this everywhere with you and use it to type your passwords for you.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Summary&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Pros&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;What's not to like - see everything I have written so far&lt;/li&gt;&lt;li&gt;Gold plated everything - Freetronics know how to make a good PCB&lt;/li&gt;&lt;li&gt;Pin usage labelled on the board and a jumper to break if you don't want sound.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Cons&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;A very minor, I2C SDA and SCL would be the icing on the cake. But probably not worth spoiling the pinout for.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/9058858949143076057/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=9058858949143076057" title="0 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9058858949143076057"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9058858949143076057"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2013/03/leostick-review-and-mini-project.html" title="Leostick Review and Mini-Project"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://2.bp.blogspot.com/-r-8ov5bQvyo/UUxT3-wx14I/AAAAAAAAE2A/p-hWdF32GUQ/s72-c/leostick.jpg" height="72" width="72"/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-6019461257361920178</id>
    <published>2013-02-18T04:30:00.001-08:00</published>
    <updated>2013-02-20T09:13:01.357-08:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="gpio"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">Raspberry Pi and Breadboard (Raspberry Leaf)</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div&gt;I thought I would share this little helper I have made to simplify using the Pi with jumper wires.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-AC6Gq5TaABU/USIcnBrnZaI/AAAAAAAAEfQ/bkCrzm4BZMc/s1600/leaf+-+web.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="202" src="http://2.bp.blogspot.com/-AC6Gq5TaABU/USIcnBrnZaI/AAAAAAAAEfQ/bkCrzm4BZMc/s320/leaf+-+web.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;If you are using your Raspberry Pi with Breadboard, and you have lots of connections to make, then the &lt;a href="https://www.adafruit.com/products/914" target="_blank"&gt;Pi Cobbler&lt;/a&gt; from Adafruit is pretty neat. However, sometimes you only need to make a couple of connections and the Cobbler is overkill and a few Male to Female jumper leads will do just fine.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-ZYaolzjb_SE/USIcWft_7AI/AAAAAAAAEfI/xwjmalK2BUo/s1600/breadboard+and+pi+-+web.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="229" src="http://1.bp.blogspot.com/-ZYaolzjb_SE/USIcWft_7AI/AAAAAAAAEfI/xwjmalK2BUo/s320/breadboard+and+pi+-+web.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The drawback with using Male to Female jumpers direct onto the GPIO is that you then have to count down the pins trying to find the pin you need, because nothing is labelled. Matching a diagram of the pinout to the actual pins is not easy and mistakes can be made.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Enter the Raspberry Leaf! Okay, so its just a bit of paper, with all the pin labels on. The image for this is at the end. Just save it, print it out, and cut around the border. It's saved at 300 dpi.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;To fit it onto the GPIO pins, I found it easiest to make the holes first by placing it over some breadboard and pushing a header pin through each hole in turn.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Pushing it all the way down to the bottom of the GPIO connector needs tome help from a plastic tool - or if you turn off your Pi and, use a small screwdriver. &lt;span style="color: red;"&gt;DON'T DO THIS WITH THE Pi POWERED UP!!!&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;This has now become a permanent fixture on my prototyping Pi.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;All the numbers refer to the BCM GPIO number, so if you are using the RPi.GPIO library then be sure to set the mode to BCM using the function &lt;i&gt;setmode&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;I hope you find it useful.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;This is the template for the original R1 board saved at 300dpi - click it to open it in its own window. Also, here is a &lt;a href="https://github.com/simonmonk/wiki_images/raw/master/raspberry%20leaf.pdf" target="_blank"&gt;PDF version&lt;/a&gt;, that's hopefully easier to print the right size.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-M0E1IVgNnlc/USI5afQSoqI/AAAAAAAAEhA/QnwqdTqGNE0/s1600/raspberry+leaf.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://3.bp.blogspot.com/-M0E1IVgNnlc/USI5afQSoqI/AAAAAAAAEhA/QnwqdTqGNE0/s320/raspberry+leaf.png" width="302" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;This is the template for the current R2 boards. &lt;a href="https://github.com/simonmonk/wiki_images/raw/master/raspberry%20leaf%20r2.pdf" target="_blank"&gt;PDF Version&lt;/a&gt;. Note that this was updated 20 Feb, 2013, as I had pins 2, 3 and 27 wrongly labelled!&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-s2VVUs3YO5E/USTWSZq1FzI/AAAAAAAAEqk/iRyL0OY6ZWU/s1600/raspberry+leaf+r2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://1.bp.blogspot.com/-s2VVUs3YO5E/USTWSZq1FzI/AAAAAAAAEqk/iRyL0OY6ZWU/s320/raspberry+leaf+r2.png" width="302" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/6019461257361920178/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=6019461257361920178" title="25 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/6019461257361920178"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/6019461257361920178"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2013/02/raspberry-pi-and-breadboard-raspberry.html" title="Raspberry Pi and Breadboard (Raspberry Leaf)"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://2.bp.blogspot.com/-AC6Gq5TaABU/USIcnBrnZaI/AAAAAAAAEfQ/bkCrzm4BZMc/s72-c/leaf+-+web.jpg" height="72" width="72"/>
    <thr:total>25</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-5188178037248869225</id>
    <published>2013-01-31T11:20:00.001-08:00</published>
    <updated>2013-01-31T11:20:15.212-08:00</updated>
    <title type="text">Minecraft, ComputerCraft and CreateSpace Self-Publishing</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;I have just finished a project with my son Matthew. We started it as something to do in the Christmas holidays. We decided to write a book on the Minecraft mod ComputerCraft. This extension to Minecraft allows you to do all sorts of really cool things with Computer Blocks within your Mincreaft world. These computer blocks can be programmed in the Lua language and can control things that move or lightup in the Minecraft world.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-DXhMAzX3cKo/UQq_oYCRbMI/AAAAAAAAEKY/5A3orVVVPp0/s1600/19.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="329" src="http://1.bp.blogspot.com/-DXhMAzX3cKo/UQq_oYCRbMI/AAAAAAAAEKY/5A3orVVVPp0/s640/19.jpg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;You can have computers, external monitors and you can even have wireless modems attached to your computers to build networks. There are also mobile computers, that you can also program, then send off to do your bidding, or even remote control from a panel of buttons (one of our projects).&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-iXCiL-CJDes/UQrAilRKuGI/AAAAAAAAEKg/8GsgLa3cBL4/s1600/Buttons.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="329" src="http://2.bp.blogspot.com/-iXCiL-CJDes/UQrAilRKuGI/AAAAAAAAEKg/8GsgLa3cBL4/s640/Buttons.jpg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;We also made a project that uses the Twitter API to listen for Tweets for you and then carry out some action in your Minecraft world to signal the arrival of the Tweet that you can then go and read on your computer screen. Another project was a Morse code translator.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-0-dHuhFSxng/UQrDtaZkaqI/AAAAAAAAEKw/_gpadTReAYk/s1600/22.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="512" src="http://3.bp.blogspot.com/-0-dHuhFSxng/UQrDtaZkaqI/AAAAAAAAEKw/_gpadTReAYk/s640/22.jpg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Having made some interesting projects, we wrapped it up into a book using the Amazon CreateSpace self-publishing platform. This was very easy to use, you even get an ISBN for free. The book is published as Print On Demand from Amazon, which means that when someone orders one it gets printed and a cover put on it. Even in full color, the price is pretty low.&lt;br /&gt;&lt;br /&gt;We also made a separate version for Kindle - the files are automatically 'converted' for use on Kindle, from the same PDF that you upload to CreateSpace, but we found that the conversion did not really work and I reformatted it specifically for Kindle.&lt;br /&gt;&lt;br /&gt;The book versions both go live almost instantly, despite dialogs warning you that it might take a week.&lt;br /&gt;&lt;br /&gt;Anyway - if you are interested in the book, then you can &lt;a href="http://www.amazon.com/ComputerCraft-Programming-Minecraft-Matthew-Monk/dp/1481927655/" target="_blank"&gt;buy it here&lt;/a&gt;. It is available as color (paperback) and Kindle, on most of Amazon's&amp;nbsp;territories.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;img border="0" src="http://2.bp.blogspot.com/-djTgPWHh88o/UQrCcSmjafI/AAAAAAAAEKo/geLHZoDK1ow/s1600/cover_amazon.jpg" /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/5188178037248869225/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=5188178037248869225" title="1 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/5188178037248869225"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/5188178037248869225"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2013/01/minecraft-computercraft-and-createspace.html" title="Minecraft, ComputerCraft and CreateSpace Self-Publishing"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/-DXhMAzX3cKo/UQq_oYCRbMI/AAAAAAAAEKY/5A3orVVVPp0/s72-c/19.jpg" height="72" width="72"/>
    <thr:total>1</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-5097706626064626806</id>
    <published>2012-12-10T04:25:00.000-08:00</published>
    <updated>2013-04-08T02:12:57.633-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="laser"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="servo"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">Raspberry Pi, Chronos Watch, Servos and a Laser</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;What a great combination! Raspberry Pi, Chronos watch, Servos and a Laser.&lt;br /&gt;&lt;br /&gt;This is a real mash-up from two projects. One that displays accelerometer data from a &lt;a href="http://processors.wiki.ti.com/index.php/EZ430-Chronos?DCMP=Chronos&amp;amp;HQS=Other+OT+chronoswiki" target="_blank"&gt;Chronos watch&lt;/a&gt;, over its wireless link. The other project being the Adafruit tutorial on using their &lt;a href="https://www.adafruit.com/products/815" target="_blank"&gt;I2C servo controller&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;I combined them to make a two-axis servo mounted laser that mirrors the movement of my arm wearing the watch.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;object class="BLOGGER-youtube-video" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" data-thumbnail-src="http://i.ytimg.com/vi/zxGUVHHPsik/0.jpg" height="266" width="320"&gt;&lt;param name="movie" value="http://www.youtube.com/v/zxGUVHHPsik?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" /&gt;&lt;param name="bgcolor" value="#FFFFFF" /&gt;&lt;param name="allowFullScreen" value="true" /&gt;&lt;embed width="320" height="266"  src="http://www.youtube.com/v/zxGUVHHPsik?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" type="application/x-shockwave-flash" allowfullscreen="true"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Watch the video to see what it does.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;span style="color: red;"&gt;WARNING: Don't shine lasers in your or anyone else's eyes.&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-0cZhqK-xZ3s/UMXTtZtbWQI/AAAAAAAACpA/gL7VyjQkrlA/s1600/wide.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="285" src="http://2.bp.blogspot.com/-0cZhqK-xZ3s/UMXTtZtbWQI/AAAAAAAACpA/gL7VyjQkrlA/s320/wide.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;To get this working for yourself, then first follow &lt;a href="http://www.designspark.com/blog/using-the-ez430-chronos-with-a-raspberry-pi" target="_blank"&gt;this tutorial&lt;/a&gt; to get your Chronos watch talking to your Raspberry Pi. Nice code thanks to Sean Brewer.&lt;br /&gt;&lt;br /&gt;Then build &lt;a href="http://learn.adafruit.com/adafruit-16-channel-servo-driver-with-raspberry-pi/overview" target="_blank"&gt;this Adafruit tutorial&lt;/a&gt;, but you will need two servos rather than one. Thanks to Kevin Townsend.&lt;br /&gt;&lt;br /&gt;Once both are working independently, then build the servo assembly. I just super-glued one servo to the arm of another and glued the optional laser module to an arm for the top laser.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-142SCiaPagE/UMXTVYOZgQI/AAAAAAAACo4/WjrSsMOnXfQ/s1600/breadboard.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="202" src="http://1.bp.blogspot.com/-142SCiaPagE/UMXTVYOZgQI/AAAAAAAACo4/WjrSsMOnXfQ/s320/breadboard.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Laser modules vary in voltage requirements. This one is driven from 5V from the Raspberry Pi with a 100 Ω series resistor. Laser modules vary so check the data sheet.&lt;br /&gt;&lt;br /&gt;Set your Chronos to ACC mode and dont forget to press [Down] so that it starts transmitting the data.&lt;br /&gt;&lt;br /&gt;Here is the Python script that controls everything!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;#!/usr/bin/python&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;from Adafruit_PWM_Servo_Driver import PWM&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;import time&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;import serial&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;import array&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;pwm = PWM(0x40, debug=True)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;servoMin = 150 &amp;nbsp;# Min pulse length out of 4096&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;servoMax = 600 &amp;nbsp;# Max pulse length out of 4096&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;servoMid = (servoMax - servoMin) / 2 + servoMin&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;def startAccessPoint():&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; return array.array('B', [0xFF, 0x07, 0x03]).tostring()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;def accDataRequest():&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; return array.array('B', [0xFF, 0x08, 0x07, 0x00, 0x00, 0x00, 0x00]).tostring()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;def twos_comp(val, bits = 8):&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; if ((val &amp;amp; (1 &amp;lt;&amp;lt; (bits-1))) != 0):&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; val = val -(1 &amp;lt;&amp;lt; bits)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; return val&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;ser = serial.Serial('/dev/ttyACM0',115200,timeout=1)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;ser.write(startAccessPoint())&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;pwm.setPWMFreq(60) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;# Set frequency to 60 Hz&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;while (True):&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; ser.write(accDataRequest())&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; accel = ser.read(7)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; x = twos_comp(ord(accel[0])) # -50 to +50&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; y = twos_comp(ord(accel[1]))&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; z = twos_comp(ord(accel[2]))&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; #print(str(x))&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; if x != 0 and y != 0 and z != 0 :&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; pwm.setPWM(0, 0, servoMid-x*3)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; pwm.setPWM(1, 0, servoMid-y*3)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; time.sleep(0.1)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.amazon.com/Programming-Raspberry-Pi-Getting-Started/dp/0071807837/" style="background-color: white; color: #33aaff; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; text-align: center;" target="_blank"&gt;&lt;img border="0" src="http://2.bp.blogspot.com/-c9hWtnFu8fo/UDnkKeb6fWI/AAAAAAAABF0/Z1mFHdtga1I/s1600/cover_provisional.jpg" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 1px solid rgb(238, 238, 238); box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 5px; position: relative;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/5097706626064626806/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=5097706626064626806" title="1 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/5097706626064626806"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/5097706626064626806"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/12/raspberry-pi-chronos-watch-servos-and.html" title="Raspberry Pi, Chronos Watch, Servos and a Laser"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://2.bp.blogspot.com/-0cZhqK-xZ3s/UMXTtZtbWQI/AAAAAAAACpA/gL7VyjQkrlA/s72-c/wide.jpg" height="72" width="72"/>
    <thr:total>1</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-11544910718477152</id>
    <published>2012-11-23T03:29:00.001-08:00</published>
    <updated>2012-11-23T03:29:51.590-08:00</updated>
    <title type="text">Using .NET Gadgeteer Modules with Arduino - Relay</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;The .NET Gadgeteer system has spawned a wide range of low cost and useful modules form places like GHI Electronics and Seedstudio.&lt;br /&gt;&lt;br /&gt;I have a load of Gadgeteer modules, sitting in a cupboard, so I thought it would be good to see how hard it would be to use them with an Arduino. I decided to start with a nice easy one, this &lt;a href="http://www.seeedstudio.com/depot/relay-module-net-gadgeteer-compatible-p-967.html" target="_blank"&gt;relay module&lt;/a&gt; from Seedstudio. It has four relays, each with an indicator LED.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-7uiHVN0qsLo/UK9XMwOPcsI/AAAAAAAACP4/cWlotHy2PrE/s1600/relay+module_web.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="317" src="http://2.bp.blogspot.com/-7uiHVN0qsLo/UK9XMwOPcsI/AAAAAAAACP4/cWlotHy2PrE/s320/relay+module_web.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;The Gadgeteer modules are all connected by 10 way ribbon cable connectors. So clearly, the first thing we need is to make a lead that we can use to connect the module to breadboard.&lt;br /&gt;&lt;br /&gt;I cut a lead in half and stripped the 10 wires from the half of the lead with the connector notch to the left. This turned out to be pretty easy. I was rather expecting it to go wrong and the leads end up all sorts of different lengths - but the wires stripped really easily.&lt;br /&gt;&lt;br /&gt;I found that using a craft knife to separate the leads helped.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-k0Rcji5RP50/UK9X7dLplqI/AAAAAAAACQA/Jk9j5kS6jQg/s1600/lead+stripped_web.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="189" src="http://4.bp.blogspot.com/-k0Rcji5RP50/UK9X7dLplqI/AAAAAAAACQA/Jk9j5kS6jQg/s320/lead+stripped_web.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;I then tinned the stripped wires and&amp;nbsp;soldered&amp;nbsp;them to a length of 10 pin header stuck into breadboard to stop it moving.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-qt3ryPseQlA/UK9Ya7pu_NI/AAAAAAAACQI/zsXbV2pVtXY/s1600/lead+soldered_web.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="165" src="http://2.bp.blogspot.com/-qt3ryPseQlA/UK9Ya7pu_NI/AAAAAAAACQI/zsXbV2pVtXY/s320/lead+soldered_web.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;There we go, a lead that we can use with any Gadgeteer module.&lt;br /&gt;&lt;br /&gt;The Gadgeteer system has many different types of pinout for these connectors. The relay module uses a type-Y socket, which is a general purpose IO arrangement. There are other types for serial, USB, I2C, analog and all sorts. They all use the same connectors, but have different pinouts.&lt;br /&gt;&lt;br /&gt;You can find full details of all the pinout options &lt;a href="http://gadgeteer.codeplex.com/wikipage?title=.NET%20Gadgeteer%20Socket%20Types" target="_blank"&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;The pinouts for the type-Y are as below:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-G6PSUYHlRKw/UK9aUoLHpZI/AAAAAAAACQY/KwfWBTtPkAA/s1600/pinout_logical.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="76" src="http://2.bp.blogspot.com/-G6PSUYHlRKw/UK9aUoLHpZI/AAAAAAAACQY/KwfWBTtPkAA/s400/pinout_logical.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-XNCvJRa64qI/UK9aZ7OukzI/AAAAAAAACQg/-HupVfSlPyI/s1600/pinout+connector.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="116" src="http://3.bp.blogspot.com/-XNCvJRa64qI/UK9aZ7OukzI/AAAAAAAACQg/-HupVfSlPyI/s200/pinout+connector.png" width="200" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Here is a section of the Eagle schematic for the relay module (Open Source).&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-na4ux78Umfg/UK9ZQs4DdlI/AAAAAAAACQQ/s4jbnHbMSgs/s1600/cct.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="187" src="http://1.bp.blogspot.com/-na4ux78Umfg/UK9ZQs4DdlI/AAAAAAAACQQ/s4jbnHbMSgs/s320/cct.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Although Gadgeteer modules are often 3.3V, this design will have no problem using 5V levels, so all looks promising. The control pins for the relays are connected to Gadgeteer pins 3, 4, 5 and 6.&lt;br /&gt;&lt;br /&gt;The schematic shows the relay coils being supplied from 5V (pin 2), but testing with a multimeter, I found that the 'top' connection of the relay coil was actually connected to pin 1 (3.3V). I don't really understand this&amp;nbsp;discrepancy, but no problem, in this case we can supply 5V from the Arduino to pin 1 of the module. That would be a bad thing to do for most types of Gadgeteer module - be Warned!&lt;br /&gt;&lt;br /&gt;Here is the wired up breadboard:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-1scXp96l-OQ/UK9bfPcLDjI/AAAAAAAACQo/Hcuh-iBxB5A/s1600/overview_web.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://4.bp.blogspot.com/-1scXp96l-OQ/UK9bfPcLDjI/AAAAAAAACQo/Hcuh-iBxB5A/s1600/overview_web.jpg" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Pin 1 of the Gadgeteer connector goes to Arduino 5V&lt;/li&gt;&lt;li&gt;Pin 10&amp;nbsp;of the Gadgeteer connector goes to Arduino GND&lt;/li&gt;&lt;li&gt;Pins 3, 4, 5 and 6 of the Gadgeteer connector goes to Arduino D2, D3, D4 and D5 respectively&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Here is a little test sketch that lets you turn each Relay on and off using the Serial Monitor.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-_KeiJrq4bkQ/UK9cSyIWM4I/AAAAAAAACQw/weMSxxUPhZ4/s1600/serial+monitor.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="182" src="http://1.bp.blogspot.com/-_KeiJrq4bkQ/UK9cSyIWM4I/AAAAAAAACQw/weMSxxUPhZ4/s320/serial+monitor.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;// Gadgeteer Relay Board&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;int relayPins[] = {2, 3, 4, 5};&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;void setup()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; for (int i = 0; i &amp;lt; 4; i++)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; pinMode(relayPins[i], OUTPUT);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; Serial.begin(9600);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; while (!Serial);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; Serial.println("A, B, C, D to turn relay on");&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; Serial.println("a, b, c, d to turn relay off");&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;void loop()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; if (Serial.available())&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; char ch = Serial.read();&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; if (ch &amp;gt;= 'A' &amp;amp;&amp;amp; ch &amp;lt;= 'D')&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; digitalWrite(relayPins[ch - 'A'], HIGH);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; if (ch &amp;gt;= 'a' &amp;amp;&amp;amp; ch &amp;lt;= 'd')&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; digitalWrite(relayPins[ch - 'a'], LOW);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;br /&gt;Now that I have a lead, I need to think about which Gadgeteer module to try next!&lt;br /&gt;&lt;br /&gt;Perhaps one of the I2C modules?&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: initial;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.dangerouslymad.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: initial;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299105242303/books/dangerous2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: initial;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="background-color: white; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: initial;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="154" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.gadgeteerbook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: initial;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1333392109262/books/cover%20med%20res.jpg?height=200&amp;amp;width=128" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="128" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/11544910718477152/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=11544910718477152" title="1 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/11544910718477152"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/11544910718477152"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/11/using-net-gadgeteer-modules-with.html" title="Using .NET Gadgeteer Modules with Arduino - Relay"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://2.bp.blogspot.com/-7uiHVN0qsLo/UK9XMwOPcsI/AAAAAAAACP4/cWlotHy2PrE/s72-c/relay+module_web.jpg" height="72" width="72"/>
    <thr:total>1</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-8649671734571482857</id>
    <published>2012-11-17T12:43:00.002-08:00</published>
    <updated>2012-11-17T12:43:54.579-08:00</updated>
    <title type="text">Review: Adafruit 16x2 OLED Display</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;If you are an Arduino user, you may well have used a 16x2 LCD display. These displays require a pot to set the contrast. The &lt;a href="https://www.adafruit.com/products/823" target="_blank"&gt;Adafruit 16x2 OLED&lt;/a&gt; display does away with the need for this pot.&amp;nbsp;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-rmyOWOWAr3o/UKfyPhv345I/AAAAAAAACKw/dyWFMFSH8_I/s1600/with+ardu_web.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://3.bp.blogspot.com/-rmyOWOWAr3o/UKfyPhv345I/AAAAAAAACKw/dyWFMFSH8_I/s320/with+ardu_web.jpg" width="317" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;In all other ways it works just like an LCD 16x2 display and uses the standard LiquidCrystal library.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Its not that obvious from the photo above, but this display is lovely! The background is jet black under most lighting and the LED emissive display much clearer than the LCD equivalents.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;It is not a cheap option, but for that special project, I Highly recommend this display.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here's the code, straight from the Example sketch - with a few pin changes:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; LiquidCrystal Library - Hello World&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;Demonstrates the use a 16x2 LCD display. &amp;nbsp;The LiquidCrystal&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;library works with all LCD displays that are compatible with the&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;Hitachi HD44780 driver. There are many of them out there, and you&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;can usually tell them by the 16-pin interface.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;This sketch prints "Hello World!" to the LCD&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;and shows the time.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; The circuit:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* LCD RS pin to digital pin 12&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* LCD Enable pin to digital pin 11&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* LCD D4 pin to digital pin 5&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* LCD D5 pin to digital pin 4&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* LCD D6 pin to digital pin 3&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* LCD D7 pin to digital pin 2&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* LCD R/W pin to ground&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* 10K resistor:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* ends to +5V and ground&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;* wiper to LCD VO pin (pin 3)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;Library originally added 18 Apr 2008&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;by David A. Mellis&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;library modified 5 Jul 2009&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;by Limor Fried (http://www.ladyada.net)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;example added 9 Jul 2009&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;by Tom Igoe&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;modified 22 Nov 2010&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;by Tom Igoe&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;This example code is in the public domain.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;http://www.arduino.cc/en/Tutorial/LiquidCrystal&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;// include the library code:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;#include &amp;lt;LiquidCrystal.h&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;// initialize the library with the numbers of the interface pins&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;LiquidCrystal lcd(7, 8, 9, 10, 11, 12);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;void setup() {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; // set up the LCD's number of columns and rows:&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; lcd.begin(16, 2);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; // Print a message to the LCD.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; lcd.print("hello, world!");&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;void loop() {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; // set the cursor to column 0, line 1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; // (note: line 1 is the second row, since counting begins with 0):&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; lcd.setCursor(0, 1);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; // print the number of seconds since reset:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; lcd.print(millis()/1000);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/8649671734571482857/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=8649671734571482857" title="2 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/8649671734571482857"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/8649671734571482857"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/11/review-adafruit-16x2-oled-display.html" title="Review: Adafruit 16x2 OLED Display"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-rmyOWOWAr3o/UKfyPhv345I/AAAAAAAACKw/dyWFMFSH8_I/s72-c/with+ardu_web.jpg" height="72" width="72"/>
    <thr:total>2</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-3963283767105934424</id>
    <published>2012-11-04T13:02:00.002-08:00</published>
    <updated>2012-11-04T13:03:30.211-08:00</updated>
    <title type="text">Laser cut 'Recording Sign'</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Thanks once again to &lt;a href="http://www.fablabmanchester.org/" target="_blank"&gt;FabLabMcr&lt;/a&gt;&amp;nbsp;I have used the laser cutter to make a 'Recording' light for my son's studio.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-M6AhU-rDMSA/UJbV_B0GXAI/AAAAAAAACBM/MpKquYYVeVg/s1600/finished.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="214" src="http://3.bp.blogspot.com/-M6AhU-rDMSA/UJbV_B0GXAI/AAAAAAAACBM/MpKquYYVeVg/s320/finished.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;It was really easy to make. Its basically a red / clear acrylic&amp;nbsp;sandwich with paper in the middle as the filling. The letters are in a stencil font that is cut from the red layer.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;This is then screwed to the front of a wooden frame, that contains a main lamp holder with a 15W compact&amp;nbsp;fluorescent&amp;nbsp;in it. Holes are drilled into the top to let the heat escape.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-FlXILwwP4Xs/UJbW3TBjeeI/AAAAAAAACBU/pk_2tzPdv2Y/s1600/finished_light.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="214" src="http://3.bp.blogspot.com/-FlXILwwP4Xs/UJbW3TBjeeI/AAAAAAAACBU/pk_2tzPdv2Y/s320/finished_light.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here are the PDF files for laser cutting.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://dl.dropbox.com/u/3993179/steve%20sign%20RED.pdf" target="_blank"&gt;Red Layer.&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://dl.dropbox.com/u/3993179/steve%20sign%20CLEAR.pdf" target="_blank"&gt;Clear Layer.&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/3963283767105934424/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=3963283767105934424" title="0 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/3963283767105934424"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/3963283767105934424"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/11/laser-cut-recording-sign.html" title="Laser cut 'Recording Sign'"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-M6AhU-rDMSA/UJbV_B0GXAI/AAAAAAAACBM/MpKquYYVeVg/s72-c/finished.jpg" height="72" width="72"/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-2409650706685966250</id>
    <published>2012-10-04T06:50:00.000-07:00</published>
    <updated>2012-10-09T09:25:46.444-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="arduino"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="uno"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="leonardo"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="hid"/>
    <title type="text">Arduino Leonardo vs. Arduino Uno</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;I finally got chance to have a really good play with a Leonardo a few weeks ago. I was checking that the Arduino-based sections of '&lt;a href="http://www.amazon.com/Hacking-Electronics-Illustrated-Makers-Hobbyists/dp/0071802363/" target="_blank"&gt;Hacking Electronics&lt;/a&gt;' worked with the Leonardo as well as the 'standard' Uno.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-vP70b3E1duY/UG2IwQcz4VI/AAAAAAAABlY/qa-8rKny5zA/s1600/uno_r3_plugged_in.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" height="119" src="http://4.bp.blogspot.com/-vP70b3E1duY/UG2IwQcz4VI/AAAAAAAABlY/qa-8rKny5zA/s200/uno_r3_plugged_in.jpg" width="200" /&gt;&lt;/a&gt;&lt;a href="http://2.bp.blogspot.com/-Qa4UQq7uXRg/UG2ISjIFoQI/AAAAAAAABlQ/0gUnwi1Qj4E/s1600/leonardo_plugged_in.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="131" src="http://2.bp.blogspot.com/-Qa4UQq7uXRg/UG2ISjIFoQI/AAAAAAAABlQ/0gUnwi1Qj4E/s200/leonardo_plugged_in.jpg" width="200" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;br /&gt;The new book will contain about 25 sketches - well Arduino is just too useful not to include in the book. So, it was with some trepidation that I uploaded the first sketch. Some 24 sketches later, and I was a convert. In the end, everything worked, and with the application of a bit of common sense, sketches can be written to run unmodified on both boards.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Uploading.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The first thing that stumped me, was that, excited by the prospect of my Leonard being able to impersonate a keyboard, I uploaded a sketch, that would spew out some gibberish.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;This worked fine of course. A very nice clean and simple class for pretending to be a keyboard - this is great, I thought. It wrote gibberish all over my sketch, but thats fine, I could unplug it and tidy it up. So, I decided to try out my next idea (a password entering gadget).&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-u7tuF7qIjZc/UG2KQIpm1jI/AAAAAAAABlg/xvw6Pt1nciA/s1600/F06_37.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="250" src="http://2.bp.blogspot.com/-u7tuF7qIjZc/UG2KQIpm1jI/AAAAAAAABlg/xvw6Pt1nciA/s320/F06_37.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Press the button and it writes your password - pretty insecure really.&lt;br /&gt;&lt;br /&gt;But the problem was, as soon as the Arduino IDE got focus, ready to press the Upload button for my new sketch, the old sketch started spewing nonsense all over it, and of course the upload couldn't be made to happen.&lt;br /&gt;&lt;br /&gt;Oops I thought - and for one moment I wondered if I had bricked my Leonardo.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;i&gt;The answer of course, is to hold down the reset button (to shut it up) until the 'uploading sketch' message appears in the IDE then release it.&lt;/i&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Phew, I was back in business.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Analog Inputs as Digital Outputs.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Most of the sketches I had trouble with were those where I was using analog pins A0 to A5 as digital outputs, by&amp;nbsp;referring&amp;nbsp;to them, using the old Arduino trick of adding 14 to their 'A number'. So, to use A0 as a digital output, you can just do:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;pinMode(14, OUTPUT);&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This did not work.&lt;br /&gt;&lt;br /&gt;However, if you do:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;pinMode(A0, OUTPUT);&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;It works just fine. What is more, it is actually clearer to see what is going on.&lt;br /&gt;&lt;br /&gt;Note, that when&amp;nbsp;referring&amp;nbsp;to the analog inputs for their intended purpose, I did not put 'A' on the front of the pin numbers, I just did the following to read from A0.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;int x = analogRead(0);&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Shields.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The other area where I had a problem was in using a Leonardo with an old pre-R3 Ethernet shield. A bit of research indicated that an R3 Ethernet Shield should work just fine with it. I didn't have one to try.&lt;br /&gt;&lt;br /&gt;The only other shield that I tried with it was the &lt;a href="http://www.freetronics.com/products/lcd-keypad-shield" target="_blank"&gt;Freetronics LCD shield&lt;/a&gt;. This worked just fine.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Conclusion.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;I really like the Leonardo, I love the USB keyboard and mouse emulation and the neat PCB layout. I also like that it is cheaper than an Uno, and has the following advantages:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;More PWM pins&lt;/li&gt;&lt;li&gt;More digital pins full stop&lt;/li&gt;&lt;li&gt;Separate I2C pins (A4 and A5 are not dual purpose on Leonardo)&lt;/li&gt;&lt;li&gt;A second hardware serial port&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;So, what did I dislike?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Not much really - in theory, an advantage of the Uno is that if you destroy the ATmega328, you can replace it with a new one. But even with my usual lack of forethought, I think I have only had to do that once, and I spend a lot of time messing with Arduino.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The keyboard-gone-mad programming problem was understandable and really just my fault.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I suppose the only real down side that I see is if you have a lot of old shields that may have problems working. I also suspect there will be&amp;nbsp;compatibility&amp;nbsp;problems with some libraries.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Personally, I really like it, and will be using it again. If asked to recommend for someone just starting out with Arduino, I would love to be able to recommend a Leonardo, but I suspect sooner or later, they would run into a&amp;nbsp;compatibility&amp;nbsp;problem. So, I guess I would tell them to get one of each.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For a full list of the Leonardo's features go &lt;a href="http://arduino.cc/en/Main/ArduinoBoardLeonardo" target="_blank"&gt;here&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Oh, and here is the&amp;nbsp;password&amp;nbsp;writing sketch. Obviously&amp;nbsp;totally&amp;nbsp;insecure - just a bit of fun.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;char* password = "mysecretpassword\n";&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;const int buttonPin = 2;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;void setup()&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; pinMode(buttonPin, INPUT_PULLUP);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; Keyboard.begin();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;void loop()&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; if (! digitalRead(buttonPin))&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; Keyboard.print(password);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; delay(2000);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="http://2.bp.blogspot.com/-ZNDu1UUftNM/UG2TvieOyEI/AAAAAAAABmE/axfUw7g3WX4/s1600/cover_med.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" height="200" src="http://2.bp.blogspot.com/-ZNDu1UUftNM/UG2TvieOyEI/AAAAAAAABmE/axfUw7g3WX4/s200/cover_med.jpg" width="200" /&gt;&lt;/a&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.dangerouslymad.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299105242303/books/dangerous2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="background-color: white; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="154" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.ioiobook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1327145313578/books/cover1.jpg?height=200&amp;amp;width=129" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="129" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.gadgeteerbook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1333392109262/books/cover%20med%20res.jpg?height=200&amp;amp;width=128" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="128" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.amazon.com/Practical-Electronics-Inventors-Paul-Scherz/dp/0071771336/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1336495994985/books/cover.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/2409650706685966250/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=2409650706685966250" title="2 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/2409650706685966250"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/2409650706685966250"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/10/arduino-leonardo-vs-arduino-uno.html" title="Arduino Leonardo vs. Arduino Uno"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/-vP70b3E1duY/UG2IwQcz4VI/AAAAAAAABlY/qa-8rKny5zA/s72-c/uno_r3_plugged_in.jpg" height="72" width="72"/>
    <thr:total>2</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-6449868593032065556</id>
    <published>2012-08-26T02:04:00.001-07:00</published>
    <updated>2012-08-28T12:33:14.853-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">Review of Raspberry Pi Prototyping Boards</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;We were all planning what we could do to hack some electronics with our Raspberry Pi's even before they arrived, and a little help in accessing and using those pins on the GPIO connector makes life a bit easier.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In this review, I look at the relative merits of three prototyping boards for the Rasspberry Pi. I use the term 'Prototyping' to distinguish them from expansion boards like the Gertboard and Pi Face that have buffers, level converters LEDs and other electronics attached to them. What I am talking about here is the Raspberry Pi equivalents to the Arduino ProtoShield. I.e. something that we can solder our own electronics to, in order to make something.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The products that I am reviewing are:&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;a href="http://shop.ciseco.co.uk/slice-of-pi-add-on-for-raspberry-pi/" target="_blank"&gt;Slice of Pi&lt;/a&gt; - Ciseco -&amp;nbsp;around&amp;nbsp;4 GBP (6 USD)&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="http://shop.ciseco.co.uk/k001-humble-pi/" target="_blank"&gt;Humble Pi&lt;/a&gt; - Ciseco - around 4 GBP (6 USD) pre-order&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.adafruit.com/products/801" target="_blank"&gt;Pi Plate&lt;/a&gt; - Adafruit - around 16 USD&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Oh the&amp;nbsp;awful&amp;nbsp;puns - thank you Raspberry Pi Foundation!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Prices are an indication only at the time of writing. Check the websites.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Be aware that all these products come as kits that must be soldered together. But then you are going to have more soldering to do anyway, to make your project, so no problem!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Lets look at each of these in a little detail:&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Slice of Pi&lt;/b&gt;&lt;/div&gt;&lt;div&gt;I first used a Slice of Pi, that I bought on eBay, in the LED blinking project that I posted about &lt;a href="http://www.doctormonk.com/2012/05/gpio-led-blink-from-python-using-slice.html" target="_blank"&gt;here&lt;/a&gt;, and then later when trying out Ciseco's XRF wireless sensors with the Raspberry Pi &lt;a href="http://www.doctormonk.com/2012/06/raspberry-pi-and-wireless-sensor.html" target="_blank"&gt;here&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-PM9p-yQ62Nw/T6z31p5apUI/AAAAAAAAAiU/qd0HdkQcIYc/s1600/slice_3.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="232" src="http://1.bp.blogspot.com/-PM9p-yQ62Nw/T6z31p5apUI/AAAAAAAAAiU/qd0HdkQcIYc/s320/slice_3.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The first thing about the Slice of Pi is its cost. If you just have a little bit of electronics that you want to attach to your Pi, then there is enough space on the board to put in a DIL IC and a few extra components, which will probably do just fine for most projects.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The second thing that I like is the X-Bee format headers connected to the Pi's serial pins. This means that you can plug in all sorts of X-Bee format RF links. But, you don't have to, leave the sockets off for a bit more room on the prototyping area.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The connections are just simple socket headers, no fancy screw terminals, but again that is just fine in many cases, and sometimes you will not even need to fit them and just solder everything up on the board itself.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Humble Pi&lt;/b&gt;&lt;/div&gt;&lt;div&gt;At the time of writing (Aug 26, 2012) the Humbe Pi is only available for pre-order. Thanks to Ciseco for sending me one to play with.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-QDzbWm0V67w/UDnevEuIByI/AAAAAAAABFM/rPR9YGShH08/s1600/HumblePi.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="214" src="http://1.bp.blogspot.com/-QDzbWm0V67w/UDnevEuIByI/AAAAAAAABFM/rPR9YGShH08/s320/HumblePi.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;The Humble Pi is the Slice of Pi's big brother. Again it fits over the Pi, this time covering almost the whole footprint of the raspberry Pi, with a cut-out around the RCA video connector.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Unlike the Slice of Pi, there are no header sockets. It is designed for you to built your whole project on the board. So, pretty much the whole of the board is taken up by a huge prototyping area.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The really nice touch is that the designer has placed pads in one corner for you to add your own 7805 compatible voltage regulator, 2.1mm DC power socket and associated capacitors. This means that you can potentially power the whole Raspberry Pi from a regular DC power supply of say 7 to 12V. Less with a LDO voltage regulator.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Its a very useful board, that has been well thought out.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Pi Plate&lt;/b&gt;&lt;/div&gt;&lt;div&gt;The Pi Plate is the Rolls-Royce of Pi prototyping boards.&amp;nbsp;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-Te1oGdPxtE4/UDnguvSX43I/AAAAAAAABFU/IVKegQFt76g/s1600/Pi+Plate.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="268" src="http://2.bp.blogspot.com/-Te1oGdPxtE4/UDnguvSX43I/AAAAAAAABFU/IVKegQFt76g/s400/Pi+Plate.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;It covers an even bigger area than the Humble Pi, by using an extra-tall header socket removing the need for a cut-out area. It is exactly the same size as the whole Raspberry Pi.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The board contacts are gold-plated and screw terminals are provided around the edge of the board that break-out the GPIO pins. If you prefer header sockets to screw terminals, then two connectors of 6 and 8 sockets are also catered for on the board. The first row of connections for the serial and I2C busses, the second for GPIO pins. Nice touch!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;One corner of the board has a breakout area where a SOIC (surface mount chip) can be soldered. Something that has carried over from some Arduino Proto Shields and is very useful on occasion, for those chips that are just not available as through-hole.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;There is no dedicated area for a voltage regulator. However, four of the screw terminals (top right) are not allocated to any Raspberry Pi GPIO connections, so it would be quite simple to use two for DC power-in and place the voltage regulator and capacitors on the general prototyping area.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;As with all Adafruit products, the quality is high and the website contains good documentation.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;/div&gt;&lt;div&gt;There is no one board that you should always buy. It depends very much what you are trying to build.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;If it is a small project and the electronics will fit on a &amp;nbsp;Slice of Pi, use that.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;If the project is too big for a slice of Pi and you are going to fit everything on the board and do not need screw terminals, then use the Humple Pi.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;However, if the screw terminals would be useful, or you want a general purpose board to experiment with, then the Pi Plate is the best choice.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I fully expect to make good use of all three boards.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Watch out for my forthcoming book on the Raspberry Pi, &lt;a href="http://www.amazon.com/dp/0071807837" target="_blank"&gt;due out Nov 2012&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://www.amazon.com/Programming-Raspberry-Pi-Getting-Started/dp/0071807837/" target="_blank"&gt;&lt;img border="0" src="http://2.bp.blogspot.com/-c9hWtnFu8fo/UDnkKeb6fWI/AAAAAAAABF0/Z1mFHdtga1I/s1600/cover_provisional.jpg" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;/div&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="border: 0px; padding: 0px;" width="154" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;a href="http://www.amazon.com/Practical-Electronics-Inventors-Paul-Scherz/dp/0071771336/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1336495994985/books/cover.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/6449868593032065556/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=6449868593032065556" title="2 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/6449868593032065556"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/6449868593032065556"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/08/review-of-raspberry-pi-prototyping.html" title="Review of Raspberry Pi Prototyping Boards"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/-PM9p-yQ62Nw/T6z31p5apUI/AAAAAAAAAiU/qd0HdkQcIYc/s72-c/slice_3.jpg" height="72" width="72"/>
    <thr:total>2</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-8703994630145748096</id>
    <published>2012-08-07T05:49:00.003-07:00</published>
    <updated>2012-08-24T00:59:09.490-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="adafruit"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">LED Clock using Raspberry Pi</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Okay, so if you were going to make a simple LED 4 digit clock, you probably wouldn't start with a Raspberry Pi.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-G4WC7HjvjjI/UCD8qs8a20I/AAAAAAAABC0/JokK1ACuVGs/s1600/clock+web.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://1.bp.blogspot.com/-G4WC7HjvjjI/UCD8qs8a20I/AAAAAAAABC0/JokK1ACuVGs/s1600/clock+web.jpg" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;But I wanted to test out I2C on the Pi and Adafruit's I2C LED displays looked like a good bet. I also used a level converter to convert the Pi's 3.3V I2C to the 5V I2C required by the LED module.&lt;br /&gt;&lt;br /&gt;To recreate what I have done here you will need:&lt;br /&gt;* Raspberry Pi&lt;br /&gt;* &lt;a href="http://adafruit.com/products/914" target="_blank"&gt;Cobbler&lt;/a&gt;&lt;br /&gt;* &lt;a href="https://www.adafruit.com/products/880" target="_blank"&gt;4-digit 7 segment display and Backpack&lt;/a&gt;&lt;br /&gt;* &lt;a href="https://www.adafruit.com/products/757" target="_blank"&gt;Level Converter&lt;/a&gt;&lt;br /&gt;* Breadboard&lt;br /&gt;* Jumper wires&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Hardware&lt;/b&gt;&lt;br /&gt;Connect up your Cobbler header as shown below. This is easier without the ribbon cable in place.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-gNnUjOHC3aM/UCD_BdyB35I/AAAAAAAABC8/nbA5cyKtgAY/s1600/cobbler+web.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="425" src="http://2.bp.blogspot.com/-gNnUjOHC3aM/UCD_BdyB35I/AAAAAAAABC8/nbA5cyKtgAY/s640/cobbler+web.jpg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;If you cannot make out the connections, they are:&lt;br /&gt;* Cobbler GND to Level Shifter GND to Display GND&lt;br /&gt;* Cobbler 5V to Level Shifter HV to Display VCC&lt;br /&gt;* Cobbler 3.3V to Level Shifter LV&lt;br /&gt;* Cobbler SDA0 to Level Shifter A1 (orange)&lt;br /&gt;* Cobbler SCL0 to Level Shifter A2 (yellow)&lt;br /&gt;* Level Shifter B1 to Display SDA (orange)&lt;br /&gt;* Level Shifter B2 to Display SCL (yellow)&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Software&lt;/b&gt;&lt;br /&gt;I had to do the following to get I2C to work, following the instructions here:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;sudo apt-get install python-smbus&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;sudo apt-get install i2c-tools (usefull but not essential)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;sudo modprobe i2c-dev&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;sudo modprobe i2c-bcm2708&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;To simplify the process of using the display, I have created a Python library modelled on the Adafruit library for Arduino. You can download this from &lt;a href="http://code.google.com/p/i2c7segment/downloads/list" target="_blank"&gt;here&lt;/a&gt; and then cd into the extracted folder and do:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;sudo python setup.py install&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The clock program is included in the library as clock_example.py:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;import i2c7segment as display&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;import time&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;disp = display.Adafruit7Segment()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;while True:&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; h = time.localtime().tm_hour&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; m = time.localtime().tm_min&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; disp.print_int(h * 100 + m)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; disp.draw_colon(True)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; disp.write_display()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; time.sleep(0.5)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; disp.draw_colon(False)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; disp.write_display()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; time.sleep(0.5)&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For those looking for more information about the library, then just browse through the file i2c7segment.py, the methods are documented.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For more information about the display itself, including the segment mapping can be found at this &lt;a href="http://forums.adafruit.com/viewtopic.php?f=47&amp;amp;t=29897" target="_blank"&gt;useful thread&lt;/a&gt;.&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Watch out for my book 'Programming the Raspberry Pi' pub. McGraw-Hill, out towards the end of 2012.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.dangerouslymad.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299105242303/books/dangerous2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="154" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.ioiobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1327145313578/books/cover1.jpg?height=200&amp;amp;width=129" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="129" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.editorialestribor.com/libros/30-proyectos-de-arduino" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1329409045803/books/Cover%2030%20Proyectos%20Arduino.gif?height=200&amp;amp;width=156" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="156" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.gadgeteerbook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1333392109262/books/cover%20med%20res.jpg?height=200&amp;amp;width=128" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="128" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.amazon.com/Practical-Electronics-Inventors-Paul-Scherz/dp/0071771336/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1336495994985/books/cover.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/8703994630145748096/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=8703994630145748096" title="13 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/8703994630145748096"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/8703994630145748096"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/08/led-clock-using-raspberry-pi.html" title="LED Clock using Raspberry Pi"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/-G4WC7HjvjjI/UCD8qs8a20I/AAAAAAAABC0/JokK1ACuVGs/s72-c/clock+web.jpg" height="72" width="72"/>
    <thr:total>13</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-4921851589211701577</id>
    <published>2012-08-05T00:22:00.001-07:00</published>
    <updated>2012-08-05T00:25:32.381-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="arduino"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="rtc"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="i2c"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="adafruit"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="led"/>
    <title type="text">Review: 4-digit 7-segment LED and RTC from Adafruit</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;In this review, I thought I would combine Adafruit's 0.56" 7-segment &lt;a href="http://www.adafruit.com/products/880" target="_blank"&gt;LED backpack and display&lt;/a&gt;&amp;nbsp;and their &lt;a href="http://adafruit.com/products/264" target="_blank"&gt;DS1307 RTC (Real Time Clock) board&lt;/a&gt;. The obvious choice for such a combination is to make a simple clock!&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-RhvTgmzUY3I/UB4WgySO1iI/AAAAAAAABCA/LQbR7A5hqio/s1600/clock+copy.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="312" src="http://4.bp.blogspot.com/-RhvTgmzUY3I/UB4WgySO1iI/AAAAAAAABCA/LQbR7A5hqio/s320/clock+copy.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;Note that my pictures make the display look a little washed out. It wasn't,&amp;nbsp;&lt;b&gt;it was very bright&lt;/b&gt;. This is juts an effect of my photography lighting setup being even brighter.&lt;br /&gt;&lt;br /&gt;Both modules are I2C and therefore just require two data pins along with GND and 5V. So, for anyone who has done their own multi-digit 7-segment LED multiplexing wiring up the breadboard becomes beautifully simple.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;0.56" 7-Segment Backpack and Display&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;This comes as a kit of parts that need to be soldered together. Well actually just the PCB, header pins and the LED display itself. The surface mount chip is already soldered for you.&amp;nbsp;&lt;/div&gt;&lt;div&gt;Beginners will have no trouble with this, and Adafruit provide a very detailed &lt;a href="http://learn.adafruit.com/adafruit-led-backpack/0-dot-56-seven-segment-backpack" target="_blank"&gt;construction guide&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-ribABJxC6fM/UB4YKlrpIAI/AAAAAAAABCI/4Jpp9LqaUZc/s1600/7segLED+bits+copy.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="240" src="http://3.bp.blogspot.com/-ribABJxC6fM/UB4YKlrpIAI/AAAAAAAABCI/4Jpp9LqaUZc/s320/7segLED+bits+copy.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;DS1307 Real Time Clock breakout board kit&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The RTC module is also supplied in kit form and would also suit someone new to soldering. Once again, the &lt;a href="http://www.ladyada.net/learn/breakoutplus/ds1307rtc.html" target="_blank"&gt;instructions&lt;/a&gt; are excellent. Showing you the right order in which to solder the components in a step-by-step manner with clear photographs as illustrations.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-npU5_y4Rw6M/UB4Z221WOAI/AAAAAAAABCQ/QDtw-oKEeks/s1600/RTC+bits+copy.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="246" src="http://1.bp.blogspot.com/-npU5_y4Rw6M/UB4Z221WOAI/AAAAAAAABCQ/QDtw-oKEeks/s320/RTC+bits+copy.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I got an extra resistor, but then I got more pin headers than I needed on both kits, so I think maybe its the Adafruit approach to err on the side of caution. Once assembled the Lithium battery (which should last years) can be inserted so that the module remembers the time.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-pPRzbY9W6-Q/UB4adiGCScI/AAAAAAAABCY/7-cggLwQwfw/s1600/RTC+copy.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://4.bp.blogspot.com/-pPRzbY9W6-Q/UB4adiGCScI/AAAAAAAABCY/7-cggLwQwfw/s320/RTC+copy.jpg" width="259" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Making a Digital Clock&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Making the digital clock was delightfully simple, and basically merges together bits from the example scripts for the libraries for each module.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The &lt;a href="https://github.com/adafruit/Adafruit-LED-Backpack-Library" target="_blank"&gt;Adafruit library for the display&lt;/a&gt; is nice, very easy to use. Their installation guide explains where to get it from github, along with &lt;a href="https://github.com/adafruit/Adafruit-GFX-Library" target="_blank"&gt;a supporting library&lt;/a&gt; that it requires.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The RTC module uses the &lt;a href="http://github.com/adafruit/RTClib" target="_blank"&gt;Jee Lab's RTClib&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;As normal with libraries, unzip the folders into your Arduino 'libraries' directory and then restart the Arduino IDE for it to pick them up. If you get an error message, as Arduino starts, about the libraries having invalid names, you missed the step of renaming the Adafruit libraries after unzipping them. Just rename the folders to remove the 'funny' characters and call them 'AdafruitLEDBackpack' and 'AdafruitGFXLibrary'.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Wire up your breadboard like this:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-RhvTgmzUY3I/UB4WgySO1iI/AAAAAAAABCA/LQbR7A5hqio/s1600/clock+copy.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="624" src="http://4.bp.blogspot.com/-RhvTgmzUY3I/UB4WgySO1iI/AAAAAAAABCA/LQbR7A5hqio/s640/clock+copy.jpg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Coming from the Arduino, the leads are:&lt;/div&gt;&lt;div&gt;Red - 5V (Vcc)&lt;/div&gt;&lt;div&gt;Black - GND&lt;/div&gt;&lt;div&gt;Orange - A4 (SDA - data)&lt;/div&gt;&lt;div&gt;Yellow - A5 (SCL - clock)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;These all just go to the pins with the same names on the two modules!&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Paste the following sketch into a new Arduino window and upload it to your board. It will set the RTC to the time at which the sketch was compiled and uploaded. So, if your computer picks up its time from the Internet, that will be pretty accurate.&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;#include &amp;lt;Wire.h&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;#include "Adafruit_LEDBackpack.h"&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;#include "Adafruit_GFX.h"&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;#include "RTClib.h"&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;RTC_DS1307 RTC;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;Adafruit_7segment disp = Adafruit_7segment();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;void setup()&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; Wire.begin();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; RTC.begin();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; if (! RTC.isrunning())&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; RTC.adjust(DateTime(__DATE__, __TIME__));&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; disp.begin(0x70);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;void loop()&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; disp.print(getDecimalTime());&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; disp.drawColon(true);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; disp.writeDisplay();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; delay(500);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; disp.drawColon(false);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; disp.writeDisplay();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; delay(500);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;int getDecimalTime()&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; DateTime now = RTC.now();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; int decimalTime = now.hour() * 100 + now.minute();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; return decimalTime;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;/div&gt;&lt;div&gt;These modules make life easy and free up Arduino pins for other uses.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Great supporting documentation telling you all you need to know to get you started and more. Two very useful modules at not a bad price.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Never again, will I be messing around multiplexing a load of LEDs with transistors for &amp;nbsp;the common anode and having the Arduino run off its feet refreshing! This is much easier!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-size: x-small;"&gt;[disclosure: These models were provided by Adafruit to me F.O.C]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Watch out for my book 'Programming the Raspberry Pi' pub. McGraw-Hill, out towards the end of 2012.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.dangerouslymad.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299105242303/books/dangerous2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="154" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.ioiobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1327145313578/books/cover1.jpg?height=200&amp;amp;width=129" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="129" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.editorialestribor.com/libros/30-proyectos-de-arduino" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1329409045803/books/Cover%2030%20Proyectos%20Arduino.gif?height=200&amp;amp;width=156" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="156" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.gadgeteerbook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1333392109262/books/cover%20med%20res.jpg?height=200&amp;amp;width=128" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="128" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.amazon.com/Practical-Electronics-Inventors-Paul-Scherz/dp/0071771336/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1336495994985/books/cover.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/4921851589211701577/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=4921851589211701577" title="2 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/4921851589211701577"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/4921851589211701577"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/08/review-4-digit-7-segment-led-and-rtc.html" title="Review: 4-digit 7-segment LED and RTC from Adafruit"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/-RhvTgmzUY3I/UB4WgySO1iI/AAAAAAAABCA/LQbR7A5hqio/s72-c/clock+copy.jpg" height="72" width="72"/>
    <thr:total>2</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-6191820870979639633</id>
    <published>2012-07-26T02:54:00.000-07:00</published>
    <updated>2012-07-26T04:04:46.944-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="servo"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">Raspberry Pi GPIO driving Servo</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;I have experimented with GPIO on the Raspberry Pi, just turning an LED on and off &lt;a href="http://www.doctormonk.com/2012/05/gpio-led-blink-from-python-using-slice.html" target="_blank"&gt;here&lt;/a&gt;. But since then Ben Croston has improved the RPi GPIO Python library to do most of the work in C and I can confirm that it is a lot faster. Driving servo motors requires precise timing, so I decided to see how the Pi would perform this task.&lt;br /&gt;&lt;br /&gt;Here is a video of the servo in action. It is set to stay on the left for a few seconds, then move to the middle&amp;nbsp;position, then swing all the way to the right, then scoot back to the left.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;object width="320" height="266" class="BLOGGER-youtube-video" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" data-thumbnail-src="http://i.ytimg.com/vi/PG_FLiKWQ9A/0.jpg"&gt;&lt;param name="movie" value="http://www.youtube.com/v/PG_FLiKWQ9A?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" /&gt;&lt;param name="bgcolor" value="#FFFFFF" /&gt;&lt;param name="allowFullScreen" value="true" /&gt;&lt;embed width="320" height="266"  src="http://www.youtube.com/v/PG_FLiKWQ9A?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" type="application/x-shockwave-flash" allowfullscreen="true"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;As you can see it works, but is rather jittery. This would make it okay for some applications.&lt;br /&gt;&lt;br /&gt;Here is what I did, for anyone wishing to try it for themselves.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Schematic&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-swr4CRYZLAI/UBELIdD7RMI/AAAAAAAABBY/-oslJWO6N6g/s1600/cct+copy.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="212" src="http://3.bp.blogspot.com/-swr4CRYZLAI/UBELIdD7RMI/AAAAAAAABBY/-oslJWO6N6g/s320/cct+copy.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;I did not like the idea of using the GPIO pin to directly drive the control signal for the servo. You may get away with it, but I wouldn't risk it, and it may not work as the GPIO pins are 3V where as the servo expects a 5V control signal.&lt;br /&gt;&lt;br /&gt;The transistor I used was a BC548, but any similar NPN transistor (like the 2N2222) should do the trick.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Breadboard&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;To build this prototype, I used &lt;a href="https://www.adafruit.com/products/914" target="_blank"&gt;Adafruit's Cobbler&lt;/a&gt;. This very handy little gadget allows you to link the GPIO connector to breadboard.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-mYImvymMzOU/UBEMUsFs0EI/AAAAAAAABBg/RChizi-m6SQ/s1600/cobbler+copy.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="188" src="http://4.bp.blogspot.com/-mYImvymMzOU/UBEMUsFs0EI/AAAAAAAABBg/RChizi-m6SQ/s320/cobbler+copy.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Here is the breadboard layout:&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-2jS9Y7YQmvs/UBEM9aetP1I/AAAAAAAABBo/HJkNAj9oW3c/s1600/breadboard+copy.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="265" src="http://2.bp.blogspot.com/-2jS9Y7YQmvs/UBEM9aetP1I/AAAAAAAABBo/HJkNAj9oW3c/s400/breadboard+copy.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;You might want to open this up to full size to see what's going on.&lt;br /&gt;&lt;br /&gt;The transistor is in the bottom three rows. The bottom most row being connected to GND on the cobbler, the base connection (second row up) is linked by a 1kΩ resistor to #17 on the cobbler.&lt;br /&gt;&lt;br /&gt;An external 5V power supply was used to provide the power to the servo. I tried using the 5V connection from the servo, but even with big (2200µF) and small capacitors across the supply, the load from the servo was enough to crash the Pi. This external power supply was connected to the red and green jumper leads to the left.&lt;br /&gt;&lt;br /&gt;A second 1kΩ resistor is connected from the external +5V to the collector of the transistor (third row up) using another 1kΩ resistor.&lt;br /&gt;&lt;br /&gt;The connections to the servo are GND, +5V (from the external supply) and the control signal from the collector of the transistor (yellow lead).&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Software&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;You will need to install the new version of the RPi.GPIO library from &lt;a href="http://pypi.python.org/pypi/RPi.GPIO/" target="_blank"&gt;here&lt;/a&gt;. I used version 0.3.1a.&lt;br /&gt;&lt;br /&gt;It requires you install python3-dev by entering the following from the terminal:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;sudo apt-get install python3-dev&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;To install the library itself, fetch the archive from the link above, unpack into a directory and then run the command:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;sudo python3 setup.py install&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;If you need more instructions on this, see my earlier post&amp;nbsp;&lt;a href="http://www.doctormonk.com/2012/05/gpio-led-blink-from-python-using-slice.html" target="_blank"&gt;here&lt;/a&gt;&lt;span style="background-color: white;"&gt;. This part of the installation is the same, except I am now using python3 instead of python.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Here is the Python program to generate the pulses.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;import RPi.GPIO as GPIO&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;import time&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;pin = 17&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;refresh_period = 0.02&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;GPIO.setmode(GPIO.BCM)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;GPIO.setup(pin, GPIO.OUT)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;GPIO.output(pin, True)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;while True:&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; for i in range(1, 100):&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GPIO.output(pin, False)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; time.sleep(0.001)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GPIO.output(pin, True)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; time.sleep(refresh_period)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; for i in range(1, 100):&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GPIO.output(pin, False)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; time.sleep(0.0015)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GPIO.output(pin, True)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; time.sleep(refresh_period)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; for i in range(1, 100):&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GPIO.output(pin, False)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; time.sleep(0.002)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GPIO.output(pin, True)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; time.sleep(refresh_period)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This has to be run as root, so save it in a file called 'servo_test.py' and then run it with the command:&lt;br /&gt;&lt;br /&gt;sudo python3 servo_test.py&lt;br /&gt;&lt;br /&gt;The program generates pulses for the servo that look like this:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-gY9N2VT2lRo/UBER3LmWanI/AAAAAAAABB0/ayN4sZxQS0g/s1600/scope.tiff" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="232" src="http://1.bp.blogspot.com/-gY9N2VT2lRo/UBER3LmWanI/AAAAAAAABB0/ayN4sZxQS0g/s320/scope.tiff" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The pulses need to be about 20 mS apart, and the length of each pulse determines the servo position. A pulse of 1.5mS puts it in the middle position, 1.0mS one side and 2.0mS the other side.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;br /&gt;The Pi can generate pulses fast enough to control a servo, but the operating system means that the pulses are not terribly reliable. The process may get interrupted at any time,&amp;nbsp;lengthening&amp;nbsp;the pulses, resulting in the jitter that you see.&lt;br /&gt;&lt;br /&gt;If you want true accurate control, then you probably need to have the Pi delegate looking after the servos to an Arduino, as I do in my &lt;a href="http://www.doctormonk.com/2012/07/raspberry-pi-meets-arduino-part-2.html" target="_blank"&gt;Pi with Arduino over USB blog post&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Watch out for my book 'Programming the Raspberry Pi' pub. McGraw-Hill, out towards the end of 2012.&lt;/b&gt;&lt;br style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;" /&gt;&lt;br style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;" /&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.dangerouslymad.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299105242303/books/dangerous2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="154" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.ioiobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1327145313578/books/cover1.jpg?height=200&amp;amp;width=129" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="129" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.editorialestribor.com/libros/30-proyectos-de-arduino" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1329409045803/books/Cover%2030%20Proyectos%20Arduino.gif?height=200&amp;amp;width=156" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="156" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.gadgeteerbook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1333392109262/books/cover%20med%20res.jpg?height=200&amp;amp;width=128" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="128" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.amazon.com/Practical-Electronics-Inventors-Paul-Scherz/dp/0071771336/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1336495994985/books/cover.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/6191820870979639633/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=6191820870979639633" title="4 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/6191820870979639633"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/6191820870979639633"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/07/raspberry-pi-gpio-driving-servo.html" title="Raspberry Pi GPIO driving Servo"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-swr4CRYZLAI/UBELIdD7RMI/AAAAAAAABBY/-oslJWO6N6g/s72-c/cct+copy.jpg" height="72" width="72"/>
    <thr:total>4</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-5327855566567976043</id>
    <published>2012-07-03T03:23:00.002-07:00</published>
    <updated>2012-07-03T13:01:13.900-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="arduino"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="python"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">Raspberry Pi meets Arduino - part 2</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;I gave a short talk and demonstration yesterday&amp;nbsp;evening&amp;nbsp;at the #raspberryjam event in Preston. I demonstrated the Pi raising some servo driven flags attached to an Arduino. I would have demonstrated communication in the other direction using a ultrasonic rangefinder, but I ran out of time. That can be my next post.&lt;br /&gt;&lt;br /&gt;Here is the code and details of the electronics for all this.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Flags&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-rtaHXDQzaT8/T_LDXej6jNI/AAAAAAAAA7g/R30rtv2IaRw/s1600/flags.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://4.bp.blogspot.com/-rtaHXDQzaT8/T_LDXej6jNI/AAAAAAAAA7g/R30rtv2IaRw/s320/flags.jpg" width="212" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: white;"&gt;First of all the electronics. Here is a wiring diagram for the servos.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-x-jrd_n9eZ4/T_K9Go7t_mI/AAAAAAAAA7U/1izV80nZxBQ/s1600/wiring.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="400" src="http://1.bp.blogspot.com/-x-jrd_n9eZ4/T_K9Go7t_mI/AAAAAAAAA7U/1izV80nZxBQ/s400/wiring.png" width="358" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The servo control pins are wired to D2 and D3.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The Arduino is powered by a separate power supply into its DC power socket. I used a 9V 1.5A power supply. The USB lead is connected from the Arduino to the Pi. I was running tightVNC on the Pi, so I could remote control it from my Mac without having to attache keyboard mouse and TV.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;b&gt;Arduino&lt;/b&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Here is the Arduino sketch.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;#include &amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;#define MIN_ANGLE 30&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;#define MAX_ANGLE 160&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;#define SERVO_1_PIN 3&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;#define SERVO_2_PIN 2&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;Servo servo1;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;Servo servo2;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;int servo1pos = MIN_ANGLE;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;int servo2pos = MIN_ANGLE;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;void setup()&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; servo1.attach(SERVO_1_PIN);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; servo2.attach(SERVO_2_PIN);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; Serial.begin(9600);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;void loop()&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; if (Serial.available())&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; char ch = Serial.read();&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; if (ch == 'a') &amp;nbsp;servo1pos = MAX_ANGLE;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; else if (ch == 'A') &amp;nbsp;servo1pos = MIN_ANGLE;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; else if (ch == 'b') &amp;nbsp;servo2pos = MAX_ANGLE;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; else if (ch == 'B') &amp;nbsp;servo2pos = MIN_ANGLE;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; servo1.write(servo1pos);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; servo2.write(servo2pos);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; delay(20);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;All nice standard stuff. It listens on the serial connection for one of the single character commands 'a', 'A', 'b' or 'B' and when it gets one it raises or lowers the appropriate flag.&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;The Python script from the Raspberry Pi end is equally simple. However you will need to install the pyserial library.&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Step 1. If you are not reading this page on your Pi, then switch now, so you can copy and paste.&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Step 2. Browse to&amp;nbsp;&lt;/span&gt;&lt;a href="http://sourceforge.net/projects/pyserial/files/" style="color: #888888; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; text-decoration: none;"&gt;here&lt;/a&gt;&lt;span style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;&amp;nbsp;and download&amp;nbsp;&lt;/span&gt;&lt;strong style="background-color: white; border-width: 0px; color: #555555; font-family: sans-serif; font-size: 13px; line-height: 18px; margin: 0px; outline: 0px; padding: 0px; text-align: -webkit-auto; vertical-align: baseline;"&gt;&lt;span style="-webkit-tap-highlight-color: rgb(0, 119, 170); background-color: transparent; border-width: 0px; color: #006699; font-size: 13px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;a href="http://sourceforge.net/projects/pyserial/files/latest/download?source=files" style="-webkit-tap-highlight-color: rgb(0, 119, 170); background-color: transparent; color: #006699; font-size: 13px; margin: 0px; outline: none; padding: 0px; text-decoration: none; vertical-align: baseline;" title="/pyserial/2.5/pyserial-2.5.tar.gz:  released on 2010-08-03 00:36:29 UTC"&gt;pyserial-2.5.tar.gz (106.3 kB)&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;and save it somewhere convenient like the Desktop.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Step 3. This is a gziped tar file. Which needs unzipping and untaring. To unzip it open a Terminal, which you will find from the 'start menu' under 'accessories'. Now paste the following commands into it.&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 13px; line-height: 18px;"&gt;cd&amp;nbsp;/home/pi/Desktop/other&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 13px; line-height: 18px;"&gt;gunzip pyserial-2.5.tar.gz&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 13px; line-height: 18px;"&gt;tar - xvf&amp;nbsp;pyserial-2.5.tar&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Step 4. Install pySerial, by typing these lines in your terminal window:&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 13px; line-height: 18px;"&gt;cd pyserial-2.5&lt;br /&gt;sudo python setup.py install&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;Startup IDLE (use Python 2 NOT 3) and open a new file, pasting the following code into it:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;from Tkinter import *&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;import serial&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;import time&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;DEVICE = '/dev/ttyACM0'&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;BAUD = 9600&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;ser = serial.Serial(DEVICE, BAUD)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;root = Tk()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;def aUp() :&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; ser.write('a')&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; return&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;def aDown() :&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; ser.write('A')&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; return&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;def bUp() :&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; ser.write('b')&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; return&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;def bDown() :&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; ser.write('B')&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; return&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;Button(text='A up', command=aUp).pack()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;Button(text='A down', command=aDown).pack()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;Button(text='B up', command=bUp).pack()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;Button(text='B down', command=bDown).pack()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;root.mainloop()&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;Then run the script and the four buttons should appear.&lt;br /&gt;&lt;br /&gt;Here is a short video showing the flags in action.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;object class="BLOGGER-youtube-video" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" data-thumbnail-src="http://i.ytimg.com/vi/jGKntbTbQzI/0.jpg" height="266" width="320"&gt;&lt;param name="movie" value="http://www.youtube.com/v/jGKntbTbQzI?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" /&gt;&lt;param name="bgcolor" value="#FFFFFF" /&gt;&lt;param name="allowFullScreen" value="true" /&gt;&lt;embed width="320" height="266"  src="http://www.youtube.com/v/jGKntbTbQzI?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" type="application/x-shockwave-flash" allowfullscreen="true"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Watch out for my book 'Programming the Raspberry Pi' pub. McGraw-Hill, out towards the end of 2012.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.dangerouslymad.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299105242303/books/dangerous2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="154" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.ioiobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1327145313578/books/cover1.jpg?height=200&amp;amp;width=129" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="129" /&gt;&lt;/a&gt;&lt;span style="color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.editorialestribor.com/libros/30-proyectos-de-arduino" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1329409045803/books/Cover%2030%20Proyectos%20Arduino.gif?height=200&amp;amp;width=156" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="156" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.gadgeteerbook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1333392109262/books/cover%20med%20res.jpg?height=200&amp;amp;width=128" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="128" /&gt;&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.amazon.com/Practical-Electronics-Inventors-Paul-Scherz/dp/0071771336/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px; text-decoration: none;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1336495994985/books/cover.jpg?height=200&amp;amp;width=200" style="-webkit-box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; border: 0px; box-shadow: rgba(0, 0, 0, 0.0976563) 1px 1px 5px; padding: 0px; position: relative;" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/5327855566567976043/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=5327855566567976043" title="7 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/5327855566567976043"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/5327855566567976043"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/07/raspberry-pi-meets-arduino-part-2.html" title="Raspberry Pi meets Arduino - part 2"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/-rtaHXDQzaT8/T_LDXej6jNI/AAAAAAAAA7g/R30rtv2IaRw/s72-c/flags.jpg" height="72" width="72"/>
    <thr:total>7</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-1960221355257505045</id>
    <published>2012-06-12T05:18:00.003-07:00</published>
    <updated>2012-06-19T00:43:22.494-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="wireless"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="sensor"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">Raspberry Pi and Wireless Sensor</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;A few weeks ago, &lt;a href="http://www.doctormonk.com/2012/05/gpio-led-blink-from-python-using-slice.html" target="_blank"&gt;I blogged about&lt;/a&gt; at a 'shield' that plugs into the Raspberry Pi's GPIO port called the 'Slice of Pi'. This very low cost board also includes an X-Bee shaped socket into which RF modules can be plugged. The company behind the 'Slice of Pi' (&lt;a href="http://shop.ciseco.co.uk/" target="_blank"&gt;Ciseco&lt;/a&gt;) is also behind a useful and low-cost range of RF devices.&lt;br /&gt;&lt;br /&gt;In this blog entry, I used one of their wireless sensor modules (in this case temperature) with a pair of XRF RF modems to add remote wireless temperature sensing to the Raspberry Pi using the serial connection on the GPIO pins.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-IAkjIEgzSEM/T9cqecq1wII/AAAAAAAAA0Y/XTySfJAWrGs/s1600/GUI.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="200" src="http://4.bp.blogspot.com/-IAkjIEgzSEM/T9cqecq1wII/AAAAAAAAA0Y/XTySfJAWrGs/s400/GUI.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Here, a simple program (on the left) reads the temperature from the remote wireless sensor and displays it (in the right). Degrees C not F, its not that cold over here!&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Hardware&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Here is the Raspberry Pi, with a Slice of Pi and an &lt;a href="http://shop.ciseco.co.uk/xrf-wireless-rf-radio-uart-rs232-serial-data-module-xbee-shape-arduino-pic-etc/" target="_blank"&gt;XRF module&lt;/a&gt; all plugged together&amp;nbsp;sandwich&amp;nbsp;style.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-tq6EqwtfFQY/T9crSA3kbDI/AAAAAAAAA0g/rn4S5hPRGbM/s1600/Pi_sm.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="265" src="http://1.bp.blogspot.com/-tq6EqwtfFQY/T9crSA3kbDI/AAAAAAAAA0g/rn4S5hPRGbM/s400/Pi_sm.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;I plugged them together with the Pi turned off, as 'hot-swapping' makes me&amp;nbsp;nervous.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The wireless temperature sensor is made up of two modules, the &lt;a href="http://shop.ciseco.co.uk/temperature-xrf-development-sensor-thermistor/" target="_blank"&gt;temperature sensor module&lt;/a&gt;, complete with Lithium battery, and another XRF module -- the same as the one attached to the Pi. These just plug together.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-L23MEcKOH8o/T9cr3bkNEnI/AAAAAAAAA0o/mOYCAwPkUgo/s1600/temp+_sm.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="131" src="http://1.bp.blogspot.com/-L23MEcKOH8o/T9cr3bkNEnI/AAAAAAAAA0o/mOYCAwPkUgo/s320/temp+_sm.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;b&gt;Software&lt;/b&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The temperature module sends the temperature as a string every 15 seconds. So all that is required of the Raspberry Pi is to catch the serial messages and display them in a Tkinter window. The sensor is microcontroller-based and quite smart, so you can do much more&amp;nbsp;complicated&amp;nbsp;things, including multiple sensors, sensor IDs and messages that indicate that the buttons on the sensor have been pressed.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The Python program to do this is listed in full below (20 lines of code). It requires the PySerial library which you must install. See the instructions &lt;a href="http://www.doctormonk.com/2012/04/raspberry-pi-and-arduino.html" target="_blank"&gt;in my earlier post &lt;/a&gt;&amp;nbsp;on linking the Pi to an Arduino.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;From IDLE (use Python 2 not 3) select File-&amp;gt;New and paste in the code below, then click 'Run Module'.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;from Tkinter import *&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;import serial&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;import time&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;DEVICE = '/dev/ttyAMA0'&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;BAUD = 9600&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;root = Tk()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;def updateTime() :&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; ser = serial.Serial(DEVICE, BAUD)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; n = ser.inWaiting()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; if n == 4 :&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; msg = ser.read(n)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; v.set(msg)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; ser.close()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; &amp;nbsp; root.after(2000, updateTime)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;v = StringVar()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;Label(root, textvariable=v, font=("Helvetica", 240)).pack()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;v.set('--.-')&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;root.after(2000, updateTime)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;root.mainloop()&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;br /&gt;These are great modules with long range and low power consumption. For the full specs, visit &lt;a href="http://shop.ciseco.co.uk/" target="_blank"&gt;Ciseco's website&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Thanks&lt;/b&gt;&lt;br /&gt;Thanks to Ciseco for lending me the hardware - I will send it back, I promise!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style="font-family: Helvetica; font-size: 12px;"&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #551a8b;" target="_blank"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;a href="http://www.dangerouslymad.com/" imageanchor="1" rel="nofollow" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #551a8b;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299105242303/books/dangerous2.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #551a8b;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="color: #551a8b;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="border: 0px; padding: 0px;" width="154" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;a href="http://www.ioiobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #551a8b;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1327145313578/books/cover1.jpg?height=200&amp;amp;width=129" style="border: 0px; padding: 0px;" width="129" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="background-color: white;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.editorialestribor.com/libros/30-proyectos-de-arduino" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1329409045803/books/Cover%2030%20Proyectos%20Arduino.gif?height=200&amp;amp;width=156" style="border: 0px; padding: 0px;" width="156" /&gt;&lt;/a&gt;&lt;span style="background-color: white;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.gadgeteerbook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1333392109262/books/cover%20med%20res.jpg?height=200&amp;amp;width=128" style="border: 0px; padding: 0px;" width="128" /&gt;&lt;/a&gt;&lt;span style="background-color: white;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.amazon.com/Practical-Electronics-Inventors-Paul-Scherz/dp/0071771336/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1336495994985/books/cover.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/1960221355257505045/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=1960221355257505045" title="11 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/1960221355257505045"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/1960221355257505045"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/06/raspberry-pi-and-wireless-sensor.html" title="Raspberry Pi and Wireless Sensor"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/-IAkjIEgzSEM/T9cqecq1wII/AAAAAAAAA0Y/XTySfJAWrGs/s72-c/GUI.png" height="72" width="72"/>
    <thr:total>11</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-7172916658659999865</id>
    <published>2012-05-31T07:41:00.003-07:00</published>
    <updated>2012-06-14T14:12:44.751-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="arduino"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="sparkfun"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="gps"/>
    <title type="text">Sparkfun Venus GPS and Arduino</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;I've just been playing with the Sparkfun &lt;a href="http://www.sparkfun.com/products/11058" target="_blank"&gt;Venus GPS module&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-bjpLEAgLH1E/T8eAYvtxWVI/AAAAAAAAAz4/4pkfba2Hi3c/s1600/GPS+GPS-11058.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="212" src="http://4.bp.blogspot.com/-bjpLEAgLH1E/T8eAYvtxWVI/AAAAAAAAAz4/4pkfba2Hi3c/s320/GPS+GPS-11058.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Very neat! It comes with more interfaces than you can shake a stick at, see the spec on the Sparkfun page. But I decided to use good old serial (or to be accurate the Software Serial library on the Arduino), so I just attached header pins to the RX0, TX0, 3.3V and GND connections and pushed it into some breadboard.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Upload the following sketch to your Arduino BEFORE making any connections. 5V from an IO pin left high on the Arduino may well kill the 3.3V output from the Tx pin on the GPS module.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;#include &amp;lt;SoftwareSerial.h&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;SoftwareSerial gpsSerial(10, 11); // RX, TX (TX not used)&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;const int sentenceSize = 80;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;char sentence[sentenceSize];&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;void setup()&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; Serial.begin(9600);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; gpsSerial.begin(9600);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;void loop()&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; static int i = 0;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; if (gpsSerial.available())&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; char ch = gpsSerial.read();&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; if (ch != '\n' &amp;amp;&amp;amp; i &amp;lt; sentenceSize)&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sentence[i] = ch;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; i++;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; else&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;sentence[i] = '\0';&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;i = 0;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;displayGPS();&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;void displayGPS()&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; char field[20];&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; getField(field, 0);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; if (strcmp(field, "$GPRMC") == 0)&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; Serial.print("Lat: ");&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; getField(field, 3); &amp;nbsp;// number&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; Serial.print(field);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; getField(field, 4); // N/S&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; Serial.print(field);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; Serial.print(" Long: ");&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; getField(field, 5); &amp;nbsp;// number&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; Serial.print(field);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; getField(field, 6); &amp;nbsp;// E/W&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; Serial.println(field);&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;void getField(char* buffer, int index)&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; int sentencePos = 0;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; int fieldPos = 0;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; int commaCount = 0;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; while (sentencePos &amp;lt; sentenceSize)&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; if (sentence[sentencePos] == ',')&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; commaCount ++;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sentencePos ++;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; if (commaCount == index)&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; buffer[fieldPos] = sentence[sentencePos];&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; fieldPos ++;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; &amp;nbsp; sentencePos ++;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;&amp;nbsp; buffer[fieldPos] = '\0';&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: xx-small;"&gt;}&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Make the following connections&lt;/div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;The red lead goes from 3.3V Arduino to 3.3V GPS Module&lt;/li&gt;&lt;li&gt;The blue lead, GND to GND&lt;/li&gt;&lt;li&gt;The yellow lead Arduino Pin 10 to TX0 on the GPS Module&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;a href="http://3.bp.blogspot.com/-8gC6yuylER8/T8eBC7JLzVI/AAAAAAAAA0A/Ls1FBccomJg/s1600/venus_sm.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em; text-align: center;"&gt;&lt;img border="0" height="534" src="http://3.bp.blogspot.com/-8gC6yuylER8/T8eBC7JLzVI/AAAAAAAAA0A/Ls1FBccomJg/s640/venus_sm.jpg" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Open the Serial Monitor and view your position!&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-h9FO3A_Q_b0/T8fcuUcM5iI/AAAAAAAAA0M/XSWiubsM95s/s1600/ser.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="275" src="http://1.bp.blogspot.com/-h9FO3A_Q_b0/T8fcuUcM5iI/AAAAAAAAA0M/XSWiubsM95s/s320/ser.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;There is a really useful resource &lt;a href="http://arduino.cc/playground/Tutorials/GPS" target="_blank"&gt;here&lt;/a&gt;,&amp;nbsp;on the Arduino Playground, that tells you all about the various fields that your GPS unit is sending.&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/7172916658659999865/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=7172916658659999865" title="9 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/7172916658659999865"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/7172916658659999865"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/05/sparkfun-venus-gps-and-arduino.html" title="Sparkfun Venus GPS and Arduino"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/-bjpLEAgLH1E/T8eAYvtxWVI/AAAAAAAAAz4/4pkfba2Hi3c/s72-c/GPS+GPS-11058.jpg" height="72" width="72"/>
    <thr:total>9</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-5975903274990662100</id>
    <published>2012-05-28T04:15:00.000-07:00</published>
    <updated>2012-06-14T14:12:00.079-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term=".net gadgeteer"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="book"/>
    <title type="text">Getting Started with .NET Gadgeteer</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;My book 'Getting Started with .NET Gadgeteer' has just started shipping - at least at Amazon.com.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-JXCAZ7YBWj8/T8Nddd1lGvI/AAAAAAAAAzs/xTB0Jfw46FA/s1600/cover+med+res.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://3.bp.blogspot.com/-JXCAZ7YBWj8/T8Nddd1lGvI/AAAAAAAAAzs/xTB0Jfw46FA/s320/cover+med+res.jpg" width="207" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Its a short book, designed to get you started and then lead you into a few projects, to explore some of the features of this interesting platform.&lt;br /&gt;&lt;br /&gt;Here are some details of the projects. More information as well as downloads can be found at the &lt;a href="http://www.gadgeteerbook.com/" target="_blank"&gt;books official website&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style="background-color: white;"&gt;&lt;span style="color: #2b1e1b; font-family: Georgia, serif;"&gt;&lt;span style="font-size: 14px; line-height: 24px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: white; color: #2b1e1b; font-family: Georgia, serif; font-size: 13px; line-height: 24px;"&gt;&lt;b&gt;Spy Camera&lt;/b&gt;&lt;/div&gt;&lt;div style="background-color: white; color: #2b1e1b; font-family: Georgia, serif; font-size: 13px; line-height: 24px;"&gt;This project uses the camera module to capture images peri- odically and save them to the SD card. The LCD touchscreen is used to set the recording interval of between 5 and 60 seconds.&lt;/div&gt;&lt;div style="background-color: white; color: #2b1e1b; font-family: Georgia, serif; font-size: 13px; line-height: 24px;"&gt;&lt;div&gt;&lt;a href="http://www.gadgeteerbook.com/projects/proj2.jpg?attredirects=0" imageanchor="1" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #93584d; text-decoration: none;"&gt;&lt;img border="0" src="http://www.gadgeteerbook.com/_/rsrc/1332159533740/projects/proj2.jpg" style="border-color: rgb(204, 204, 204) rgb(153, 153, 153) rgb(153, 153, 153) rgb(204, 204, 204); border-style: solid; border-width: 1px; padding: 7px;" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Snowflakes Game&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;This is a simple game in which you guide a tongue back and forth across the screen in order to catch snowflakes that are falling from the sky.&lt;/div&gt;&lt;div&gt;The project uses the display and joystick modules included in the Fez Starter Kit.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;a href="http://www.gadgeteerbook.com/projects/proj3.jpg?attredirects=0" imageanchor="1" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #93584d; text-decoration: none;"&gt;&lt;img border="0" src="http://www.gadgeteerbook.com/_/rsrc/1332159605913/projects/proj3.jpg" style="border-color: rgb(204, 204, 204) rgb(153, 153, 153) rgb(153, 153, 153) rgb(204, 204, 204); border-style: solid; border-width: 1px; padding: 7px;" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Web Messenger&lt;/b&gt;&lt;/div&gt;The Gadgeteer with an Ethernet module can be put to work as a small web server. In this project, the web server constantly serves the contents of the Gadgeteer screen. You can draw sketches on the screen with your finger or a stylus and leave messages for the world to see.&lt;br /&gt;&lt;div&gt;&lt;a href="http://www.gadgeteerbook.com/projects/proj4.jpg?attredirects=0" imageanchor="1" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #93584d; text-decoration: none;"&gt;&lt;img border="0" src="http://www.gadgeteerbook.com/_/rsrc/1332159663672/projects/proj4.jpg" style="border-color: rgb(204, 204, 204) rgb(153, 153, 153) rgb(153, 153, 153) rgb(204, 204, 204); border-style: solid; border-width: 1px; padding: 7px;" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="background-color: white; color: #2b1e1b; font-family: Georgia, serif; font-size: 13px; line-height: 24px;"&gt;&lt;b&gt;Camera Backup&amp;nbsp;Gadget&lt;/b&gt;&lt;/div&gt;&lt;div style="background-color: white; color: #2b1e1b; font-family: Georgia, serif; font-size: 13px; line-height: 24px;"&gt;This project &amp;nbsp;is intended for the digital camera user who, while travelling, might feel insecure about having all his or her precious photo- graphs on just one SD card that could become damaged or lost. Instead of copying the files to a laptop, this gadget will copy everything on an SD card to a USB flash drive.&lt;br /&gt;&lt;div&gt;&lt;a href="http://www.gadgeteerbook.com/projects/proj5.jpg?attredirects=0" imageanchor="1" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #93584d; text-decoration: none;"&gt;&lt;img border="0" src="http://www.gadgeteerbook.com/_/rsrc/1332159735589/projects/proj5.jpg" style="border-color: rgb(204, 204, 204) rgb(153, 153, 153) rgb(153, 153, 153) rgb(204, 204, 204); border-style: solid; border-width: 1px; padding: 7px;" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/5975903274990662100/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=5975903274990662100" title="0 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/5975903274990662100"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/5975903274990662100"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/05/getting-started-with-net-gadgeteer.html" title="Getting Started with .NET Gadgeteer"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-JXCAZ7YBWj8/T8Nddd1lGvI/AAAAAAAAAzs/xTB0Jfw46FA/s72-c/cover+med+res.jpg" height="72" width="72"/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-8966157886115506851</id>
    <published>2012-05-21T19:57:00.001-07:00</published>
    <updated>2012-05-21T20:00:45.677-07:00</updated>
    <title type="text">Bay Area Maker Faire - Photographs</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-S5P4mUO41zQ/T7r7H8CPZTI/AAAAAAAAAus/VyjE9GnprqA/s1600/DSC_0001.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://3.bp.blogspot.com/-S5P4mUO41zQ/T7r7H8CPZTI/AAAAAAAAAus/VyjE9GnprqA/s320/DSC_0001.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;The Caltrain - double-decker and straight through the town like in a Western. This is in Redwood City where I stayed.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-k_tqXkSIS14/T7r7JDNxNZI/AAAAAAAAAu0/gVRLvQS4Wig/s1600/DSC_0002.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://4.bp.blogspot.com/-k_tqXkSIS14/T7r7JDNxNZI/AAAAAAAAAu0/gVRLvQS4Wig/s320/DSC_0002.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-RVJcHnRPHuw/T7r7LG8rOEI/AAAAAAAAAu8/sbhEtcZBjYE/s1600/DSC_0005.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/-RVJcHnRPHuw/T7r7LG8rOEI/AAAAAAAAAu8/sbhEtcZBjYE/s320/DSC_0005.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-E1wFPjYrMfQ/T7r7N4LCVSI/AAAAAAAAAvE/v6oSXdKCvW4/s1600/DSC_0007.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://2.bp.blogspot.com/-E1wFPjYrMfQ/T7r7N4LCVSI/AAAAAAAAAvE/v6oSXdKCvW4/s320/DSC_0007.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Pier 39 in San Francisco&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-QyF01Twjg0I/T7r7Ph4WC4I/AAAAAAAAAvM/MqxpG8lpP7A/s1600/DSC_0008.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/-QyF01Twjg0I/T7r7Ph4WC4I/AAAAAAAAAvM/MqxpG8lpP7A/s320/DSC_0008.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-tkzOxhbG2_A/T7r7ShJXP0I/AAAAAAAAAvU/7_ES-y-3yoQ/s1600/DSC_0010.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://2.bp.blogspot.com/-tkzOxhbG2_A/T7r7ShJXP0I/AAAAAAAAAvU/7_ES-y-3yoQ/s320/DSC_0010.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-TXCklmUul_U/T7r7T7mR-bI/AAAAAAAAAvc/WLibbOmQ_Ek/s1600/DSC_0011.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://1.bp.blogspot.com/-TXCklmUul_U/T7r7T7mR-bI/AAAAAAAAAvc/WLibbOmQ_Ek/s320/DSC_0011.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-46Dg3vvwvVI/T7r7VCa5CyI/AAAAAAAAAvk/2Bpbefi3lVY/s1600/DSC_0012.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://2.bp.blogspot.com/-46Dg3vvwvVI/T7r7VCa5CyI/AAAAAAAAAvk/2Bpbefi3lVY/s320/DSC_0012.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-lEAmdi4cDLw/T7r7WW-Yg_I/AAAAAAAAAvs/6cgN4w8Rq3o/s1600/DSC_0013.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://4.bp.blogspot.com/-lEAmdi4cDLw/T7r7WW-Yg_I/AAAAAAAAAvs/6cgN4w8Rq3o/s320/DSC_0013.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-JZCSX1ci5uY/T7r7X6W_5NI/AAAAAAAAAv0/S0PXugcPZgE/s1600/DSC_0017.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://3.bp.blogspot.com/-JZCSX1ci5uY/T7r7X6W_5NI/AAAAAAAAAv0/S0PXugcPZgE/s320/DSC_0017.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;I took the ferry to Angel Island and had a lovely day walking around the island. &lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-LqhYbPuNc9Y/T7r7Y3gISuI/AAAAAAAAAv8/dSMI7M1aaTQ/s1600/DSC_0019.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/-LqhYbPuNc9Y/T7r7Y3gISuI/AAAAAAAAAv8/dSMI7M1aaTQ/s320/DSC_0019.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-4ZW2mgGs7KM/T7r7bpiPy7I/AAAAAAAAAwE/ZGwediaROMA/s1600/DSC_0020.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://4.bp.blogspot.com/-4ZW2mgGs7KM/T7r7bpiPy7I/AAAAAAAAAwE/ZGwediaROMA/s320/DSC_0020.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-0jzPHP7i94Y/T7r7fUbVe4I/AAAAAAAAAwM/RSuqjj3bt80/s1600/DSC_0021.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://1.bp.blogspot.com/-0jzPHP7i94Y/T7r7fUbVe4I/AAAAAAAAAwM/RSuqjj3bt80/s320/DSC_0021.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-P2ObaxpTuWM/T7r7g1-3KOI/AAAAAAAAAwU/V-xCuT3rCfE/s1600/DSC_0023.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/-P2ObaxpTuWM/T7r7g1-3KOI/AAAAAAAAAwU/V-xCuT3rCfE/s320/DSC_0023.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-MYypcaY16JE/T7r7ihA5k1I/AAAAAAAAAwc/AQEp2L2x2nI/s1600/DSC_0024.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/-MYypcaY16JE/T7r7ihA5k1I/AAAAAAAAAwc/AQEp2L2x2nI/s320/DSC_0024.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/--RGDyQDwP6s/T7r7kdG-rJI/AAAAAAAAAwk/FhG3aYTc0Nk/s1600/DSC_0024.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/--RGDyQDwP6s/T7r7kdG-rJI/AAAAAAAAAwk/FhG3aYTc0Nk/s320/DSC_0024.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-hv4K9FMM59A/T7r7lXzTePI/AAAAAAAAAws/rtLlX_IRPEY/s1600/DSC_0025.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://3.bp.blogspot.com/-hv4K9FMM59A/T7r7lXzTePI/AAAAAAAAAws/rtLlX_IRPEY/s320/DSC_0025.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Great views of Alcatraz and the Golden Gate Bridge&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-1d6xxuFr6qE/T7r8E1CohDI/AAAAAAAAAxE/IxR9VOGrpB4/s1600/DSC_0029.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://2.bp.blogspot.com/-1d6xxuFr6qE/T7r8E1CohDI/AAAAAAAAAxE/IxR9VOGrpB4/s320/DSC_0029.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;3D printers were arround in great numbers. Lots of different kits and ready made printers. These amazing figures one of the many amazing printings on display.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-X3pSJCENbQM/T7r8GadxzCI/AAAAAAAAAxM/xcTTSaolOPQ/s1600/DSC_0030.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://2.bp.blogspot.com/-X3pSJCENbQM/T7r8GadxzCI/AAAAAAAAAxM/xcTTSaolOPQ/s320/DSC_0030.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-LStb2cZYcUQ/T7r8IZDXMeI/AAAAAAAAAxU/rdW7bCLZayI/s1600/DSC_0031.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://1.bp.blogspot.com/-LStb2cZYcUQ/T7r8IZDXMeI/AAAAAAAAAxU/rdW7bCLZayI/s320/DSC_0031.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-SgwQXzz9Gts/T7r8K8Bzz1I/AAAAAAAAAxc/WUk8Wq8nQkM/s1600/DSC_0032.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/-SgwQXzz9Gts/T7r8K8Bzz1I/AAAAAAAAAxc/WUk8Wq8nQkM/s320/DSC_0032.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-hQ9jjXsC72c/T7r8Nytu1DI/AAAAAAAAAxk/ADoTY60EjW0/s1600/DSC_0033.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://1.bp.blogspot.com/-hQ9jjXsC72c/T7r8Nytu1DI/AAAAAAAAAxk/ADoTY60EjW0/s320/DSC_0033.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-TERhqy-S0Cc/T7r8P8BbKjI/AAAAAAAAAxs/vEKVgXZm-7Y/s1600/DSC_0034.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/-TERhqy-S0Cc/T7r8P8BbKjI/AAAAAAAAAxs/vEKVgXZm-7Y/s320/DSC_0034.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Cupcakes vs Dalek&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-sHaKhBsGDuI/T7r8RmfE1iI/AAAAAAAAAx0/7Yz5H0A_IpQ/s1600/DSC_0035.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://1.bp.blogspot.com/-sHaKhBsGDuI/T7r8RmfE1iI/AAAAAAAAAx0/7Yz5H0A_IpQ/s320/DSC_0035.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-70EXRuNX74I/T7r8TcMNUDI/AAAAAAAAAx8/ZMJkW_15b7Q/s1600/DSC_0037.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://3.bp.blogspot.com/-70EXRuNX74I/T7r8TcMNUDI/AAAAAAAAAx8/ZMJkW_15b7Q/s320/DSC_0037.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;Thats what I call a PC!&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-Ce4Rzq2Hyws/T7r8VedLaUI/AAAAAAAAAyE/fHOiTRKtWL4/s1600/DSC_0040.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/-Ce4Rzq2Hyws/T7r8VedLaUI/AAAAAAAAAyE/fHOiTRKtWL4/s320/DSC_0040.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-utMqa5K1K6Y/T7r8XORkobI/AAAAAAAAAyM/ePjQEfd4vAU/s1600/DSC_0043.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://3.bp.blogspot.com/-utMqa5K1K6Y/T7r8XORkobI/AAAAAAAAAyM/ePjQEfd4vAU/s320/DSC_0043.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Super-sized Arduino for teaching&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-Kyq_f8SVIIE/T7r8Zc24vWI/AAAAAAAAAyU/qLsECSe-AZ4/s1600/DSC_0046.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://2.bp.blogspot.com/-Kyq_f8SVIIE/T7r8Zc24vWI/AAAAAAAAAyU/qLsECSe-AZ4/s320/DSC_0046.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-uYE7cgerzG8/T7r8b5ErYrI/AAAAAAAAAyc/gYE9uU8HjDc/s1600/DSC_0046.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://1.bp.blogspot.com/-uYE7cgerzG8/T7r8b5ErYrI/AAAAAAAAAyc/gYE9uU8HjDc/s320/DSC_0046.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-V8gHjPywRrw/T7r8di8UTwI/AAAAAAAAAyk/-VUNI6dldCQ/s1600/DSC_0047.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://2.bp.blogspot.com/-V8gHjPywRrw/T7r8di8UTwI/AAAAAAAAAyk/-VUNI6dldCQ/s320/DSC_0047.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-pMcuuU43wZ4/T7r8fIa5YxI/AAAAAAAAAys/kEU4pasfq6Q/s1600/DSC_0048.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://4.bp.blogspot.com/-pMcuuU43wZ4/T7r8fIa5YxI/AAAAAAAAAys/kEU4pasfq6Q/s320/DSC_0048.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-GPwgAFZ05S4/T7r8hTodHWI/AAAAAAAAAy0/JbV5CxfD6Qo/s1600/DSC_0049.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://1.bp.blogspot.com/-GPwgAFZ05S4/T7r8hTodHWI/AAAAAAAAAy0/JbV5CxfD6Qo/s320/DSC_0049.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-CbhfRhUEkuA/T7r8kM2wSaI/AAAAAAAAAy8/f6aFE5pi7vU/s1600/DSC_0050.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://2.bp.blogspot.com/-CbhfRhUEkuA/T7r8kM2wSaI/AAAAAAAAAy8/f6aFE5pi7vU/s320/DSC_0050.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;R2D2 Makers club&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-W0iaqfNbuII/T7r8lhR0I7I/AAAAAAAAAzE/1Q_cgtnB_fM/s1600/DSC_0050.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;br /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-9-tVRSue-h0/T7r8mwLUiXI/AAAAAAAAAzM/ipo07Pfdhoo/s1600/DSC_0051.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://4.bp.blogspot.com/-9-tVRSue-h0/T7r8mwLUiXI/AAAAAAAAAzM/ipo07Pfdhoo/s320/DSC_0051.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-mABipQysrf8/T7r8pyyxyuI/AAAAAAAAAzU/-Xd5u12e6CE/s1600/DSC_0055.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="213" src="http://3.bp.blogspot.com/-mABipQysrf8/T7r8pyyxyuI/AAAAAAAAAzU/-Xd5u12e6CE/s320/DSC_0055.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Massive Tessla Coils&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-JJbKdkcAEqs/T7r8tc5kr6I/AAAAAAAAAzc/IA_LwVIKX4o/s1600/DSC_0056.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://1.bp.blogspot.com/-JJbKdkcAEqs/T7r8tc5kr6I/AAAAAAAAAzc/IA_LwVIKX4o/s320/DSC_0056.jpg" width="213" /&gt;&lt;/a&gt;&lt;/div&gt;Steampunk&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/8966157886115506851/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=8966157886115506851" title="0 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/8966157886115506851"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/8966157886115506851"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/05/bay-area-maker-faire-photographs.html" title="Bay Area Maker Faire - Photographs"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-S5P4mUO41zQ/T7r7H8CPZTI/AAAAAAAAAus/VyjE9GnprqA/s72-c/DSC_0001.jpg" height="72" width="72"/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-1018137683279733430</id>
    <published>2012-05-20T21:19:00.001-07:00</published>
    <updated>2012-05-20T21:19:54.789-07:00</updated>
    <title type="text">Eclipse Photos</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;I took these photographs at the Bay Area Maker Faire Earlier today.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-JVnHvKpywDI/T7nBs6IDyBI/AAAAAAAAAtA/JPJi5r2xzcM/s1600/DSC_0063.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="313" src="http://3.bp.blogspot.com/-JVnHvKpywDI/T7nBs6IDyBI/AAAAAAAAAtA/JPJi5r2xzcM/s320/DSC_0063.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-9vt0FRkLDq4/T7nButQaSrI/AAAAAAAAAtI/ka0ApdY-DNM/s1600/DSC_0071.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="286" src="http://4.bp.blogspot.com/-9vt0FRkLDq4/T7nButQaSrI/AAAAAAAAAtI/ka0ApdY-DNM/s320/DSC_0071.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-jDz_ckh9-HI/T7nBw1pyetI/AAAAAAAAAtQ/Mtn2o9RRmDY/s1600/DSC_0073.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="299" src="http://1.bp.blogspot.com/-jDz_ckh9-HI/T7nBw1pyetI/AAAAAAAAAtQ/Mtn2o9RRmDY/s320/DSC_0073.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-16ygHE-bQiE/T7nByeSubGI/AAAAAAAAAtY/LlQnzqgy8WA/s1600/DSC_0076.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="309" src="http://2.bp.blogspot.com/-16ygHE-bQiE/T7nByeSubGI/AAAAAAAAAtY/LlQnzqgy8WA/s320/DSC_0076.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-Tc1iqV5eHO4/T7nBzVkpG2I/AAAAAAAAAtg/zfa5RPP_bEw/s1600/DSC_0077.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="303" src="http://1.bp.blogspot.com/-Tc1iqV5eHO4/T7nBzVkpG2I/AAAAAAAAAtg/zfa5RPP_bEw/s320/DSC_0077.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-iLXh-uEWFtc/T7nB03chUHI/AAAAAAAAAto/g0SzXtQZwUw/s1600/DSC_0078.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://3.bp.blogspot.com/-iLXh-uEWFtc/T7nB03chUHI/AAAAAAAAAto/g0SzXtQZwUw/s320/DSC_0078.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-WcGegyrVDhI/T7nB2NN7-rI/AAAAAAAAAtw/_E51UhTFDGU/s1600/DSC_0079.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="305" src="http://2.bp.blogspot.com/-WcGegyrVDhI/T7nB2NN7-rI/AAAAAAAAAtw/_E51UhTFDGU/s320/DSC_0079.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-SkRHZ7ETbtk/T7nB3J-YuPI/AAAAAAAAAt4/INCU1yPivmk/s1600/DSC_0080.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://1.bp.blogspot.com/-SkRHZ7ETbtk/T7nB3J-YuPI/AAAAAAAAAt4/INCU1yPivmk/s320/DSC_0080.jpg" width="319" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-R8U9f_XGAo0/T7nB3-Cz2XI/AAAAAAAAAuA/r2LtkpBwWJM/s1600/DSC_0082.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://1.bp.blogspot.com/-R8U9f_XGAo0/T7nB3-Cz2XI/AAAAAAAAAuA/r2LtkpBwWJM/s320/DSC_0082.jpg" width="310" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-aY2UjEZXHp8/T7nB6BGQXII/AAAAAAAAAuI/QbEHxnI9X-o/s1600/DSC_0085.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="306" src="http://2.bp.blogspot.com/-aY2UjEZXHp8/T7nB6BGQXII/AAAAAAAAAuI/QbEHxnI9X-o/s320/DSC_0085.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-K2Bo6YqurGk/T7nB8W7qGxI/AAAAAAAAAuQ/Yqpkjuz2cCQ/s1600/DSC_0085.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="306" src="http://2.bp.blogspot.com/-K2Bo6YqurGk/T7nB8W7qGxI/AAAAAAAAAuQ/Yqpkjuz2cCQ/s320/DSC_0085.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-IeAWVrb1f_k/T7nB-bBbY-I/AAAAAAAAAuY/YHMYOmy-NSw/s1600/DSC_0087.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="311" src="http://4.bp.blogspot.com/-IeAWVrb1f_k/T7nB-bBbY-I/AAAAAAAAAuY/YHMYOmy-NSw/s320/DSC_0087.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-58ooJTHkcO4/T7nB_nfCjKI/AAAAAAAAAug/QcurNWUkJrY/s1600/DSC_0089.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="303" src="http://3.bp.blogspot.com/-58ooJTHkcO4/T7nB_nfCjKI/AAAAAAAAAug/QcurNWUkJrY/s320/DSC_0089.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/1018137683279733430/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=1018137683279733430" title="3 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/1018137683279733430"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/1018137683279733430"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/05/eclipse-photos.html" title="Eclipse Photos"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-JVnHvKpywDI/T7nBs6IDyBI/AAAAAAAAAtA/JPJi5r2xzcM/s72-c/DSC_0063.jpg" height="72" width="72"/>
    <thr:total>3</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-1849144414076545373</id>
    <published>2012-05-20T08:25:00.000-07:00</published>
    <updated>2012-06-19T00:41:33.442-07:00</updated>
    <title type="text">Slides from '20 Things to do with your Arduino'</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Thanks to those who came to see my talk at the Bay Area Maker Faire, and sorry about the delayed start.&lt;br /&gt;&lt;br /&gt;As promised, the presentation is here: &lt;a href="http://dl.dropbox.com/u/3993179/bamf_monk.pdf"&gt;http://dl.dropbox.com/u/3993179/bamf_monk.pdf&lt;/a&gt;&lt;br /&gt;&lt;span style="background-color: white;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;span style="background-color: white;"&gt;Books:&lt;/span&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;/div&gt;&lt;div style="font-family: Helvetica; font-size: 12px;"&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #551a8b;" target="_blank"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; background-position: initial initial; background-repeat: initial initial; border-bottom-style: none; color: #551a8b;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style="font-family: Helvetica; font-size: 12px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="font-family: Helvetica; font-size: 12px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/1849144414076545373/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=1849144414076545373" title="0 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/1849144414076545373"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/1849144414076545373"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/05/slides-from-20-things-to-do-with-you.html" title="Slides from '20 Things to do with your Arduino'"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-9019355259975751606</id>
    <published>2012-05-15T01:44:00.000-07:00</published>
    <updated>2012-05-15T01:44:20.239-07:00</updated>
    <title type="text">Meet me at the Bay Area Maker Faire 2012</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;I am going to be at the &lt;a href="http://makerfaire.com/bayarea/2012/"&gt;Bay Area Maker Faire&lt;/a&gt; on Saturday and Sunday (19th and 20th of May 2012). I will be on the McGraw Hill stand (most of the time) so please come and say hello.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I am giving a talk and demonstration of Arduino on Saturday at 7:30 in the Makershed.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;MGH Marketing made it worryingly easy to make me look mad!&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-jL9vf4I_cbk/T7IWWavcP3I/AAAAAAAAAs0/Iditag6i98U/s1600/Monk+poster.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="640" src="http://1.bp.blogspot.com/-jL9vf4I_cbk/T7IWWavcP3I/AAAAAAAAAs0/Iditag6i98U/s640/Monk+poster.png" width="425" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/9019355259975751606/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=9019355259975751606" title="2 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9019355259975751606"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9019355259975751606"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/05/meet-me-at-bay-area-maker-faire-2012.html" title="Meet me at the Bay Area Maker Faire 2012"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/-jL9vf4I_cbk/T7IWWavcP3I/AAAAAAAAAs0/Iditag6i98U/s72-c/Monk+poster.png" height="72" width="72"/>
    <thr:total>2</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-9009116791081492829</id>
    <published>2012-05-11T08:54:00.002-07:00</published>
    <updated>2012-06-19T00:43:52.777-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">GPIO LED blink from Python using Slice of Pi</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;You take the life of your &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; in your hands when you start messing with the GPIO pins. The safe approach is to use a&amp;nbsp;proper&amp;nbsp;buffered board that protects the Pi's system on a chip, or use an Arduino &lt;a href="http://www.doctormonk.com/2012/04/raspberry-pi-and-arduino.html" target="_blank"&gt;as described in a previous post&lt;/a&gt; of mine.&lt;br /&gt;&lt;br /&gt;However, I just couldn't resist trying out the GPIO pins directly.&lt;br /&gt;&lt;br /&gt;IF YOU DESTROY YOUR RASPBERRY PI DON'T BLAME ME. YOU HAVE BEEN WARNED!&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-3LUOiLJkQz4/T6z2ZCHa_FI/AAAAAAAAAh8/IRM1Th9bHfA/s1600/pi_led_with_screen_sm.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://3.bp.blogspot.com/-3LUOiLJkQz4/T6z2ZCHa_FI/AAAAAAAAAh8/IRM1Th9bHfA/s320/pi_led_with_screen_sm.jpg" width="276" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;So, what I have done is use the &lt;a href="http://openmicros.org/index.php/articles/88-ciseco-product-documentation/160-slice-of-pi-for-the-raspberry-pi" target="_blank"&gt;Slice of Pi&lt;/a&gt; and attach an LED and current&amp;nbsp;limiting&amp;nbsp;resistor to it. Then use the RPi.GPIO library to control the LED from the Raspberry Pi.&lt;br /&gt;&lt;br /&gt;The 'Slice' is a very low cost entirely passive breakout board for the Pi's GPIO connector.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-J0kQbpiLuRY/T6z25mKYVqI/AAAAAAAAAiM/rslNQhh-edw/s1600/slice_1.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="170" src="http://4.bp.blogspot.com/-J0kQbpiLuRY/T6z25mKYVqI/AAAAAAAAAiM/rslNQhh-edw/s200/slice_1.jpg" width="200" /&gt;&lt;/a&gt;&lt;a href="http://4.bp.blogspot.com/-3hM_8yubgVs/T6z2uMqhCgI/AAAAAAAAAiE/t81m0yHiOlE/s1600/slice_on_pi.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="106" src="http://4.bp.blogspot.com/-3hM_8yubgVs/T6z2uMqhCgI/AAAAAAAAAiE/t81m0yHiOlE/s200/slice_on_pi.jpg" width="200" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;It is primarily intended to house X-bee format radio modules and I hope to try these out in a later post, but for now I was just using it as a convenient means of connecting to the GPIO pins.&lt;br /&gt;&lt;br /&gt;If you prefer, you could just connect header sockets to the appropriate pins on the Pi board itself, but this avoids the risk of accidental shorting of pins.&lt;br /&gt;&lt;br /&gt;My first step was to assemble the 'Slice', which comes as a kit that you have to solder together yourself. Its all nice big pads and easy to solder.&lt;br /&gt;&lt;br /&gt;I also added a 3 pin header socket for the three power connections 5V, 3.3V and GND. IMHO it would be nice if the slice came with this. It does however come with a header kit in case your Pi does not have one ready soldered. My Pi came with one of these already soldered in, so I didn't need the one that came with the Slice.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-PM9p-yQ62Nw/T6z31p5apUI/AAAAAAAAAiU/qd0HdkQcIYc/s1600/slice_3.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="232" src="http://1.bp.blogspot.com/-PM9p-yQ62Nw/T6z31p5apUI/AAAAAAAAAiU/qd0HdkQcIYc/s320/slice_3.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The low profile header sockets are for radio modules.&amp;nbsp;Definitely&amp;nbsp;something to look forward to there!&lt;br /&gt;&lt;br /&gt;The Pi's GPIO pins are 3.3V and low current. Low An LED will glow with just 1 or 2 mA flowing through it, which shouldn't do the Pi any harm. By using a 1kΩ resistor, if the LED forward voltage is 2V, and the supply voltage is 3.3V, that leaves 1.3V across the resistor, using Ohms Law, I = V / R so I = 1.3mA.&lt;br /&gt;&lt;br /&gt;I just twisted one leg of the resistor around the negative lead of the LED. The negative lead is the shorter lead.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-odXZC23qJT8/T60AvdH2M4I/AAAAAAAAAig/o1H0WQ0OzPQ/s1600/led_and_res.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="197" src="http://3.bp.blogspot.com/-odXZC23qJT8/T60AvdH2M4I/AAAAAAAAAig/o1H0WQ0OzPQ/s320/led_and_res.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Put the positive lead of the LED into the 3.3V power socket on the slice and the free end of the resistor into the socket on the Slice labelled GP0.&lt;br /&gt;&lt;br /&gt;You can now fit the slice onto your Pi.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-ne0FnWJgcF8/T6z2H2fyymI/AAAAAAAAAh0/5eublWe7tTo/s1600/pi_led.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em; text-align: center;"&gt;&lt;img border="0" height="212" src="http://1.bp.blogspot.com/-ne0FnWJgcF8/T6z2H2fyymI/AAAAAAAAAh0/5eublWe7tTo/s320/pi_led.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Now its time to sort out the software side of things.&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Step 1. If you are not reading this page on your Pi, then switch now, so you can copy and paste.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Step 2. Browse to&amp;nbsp;&lt;/span&gt;&lt;a href="http://pypi.python.org/pypi/RPi.GPIO" style="background-color: white; color: #888888; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; text-decoration: none;"&gt;here&lt;/a&gt;&lt;span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;&amp;nbsp;and download&amp;nbsp;&lt;/span&gt;&lt;span style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif;"&gt;&lt;span style="font-size: 14px; line-height: 18px;"&gt;RPi.GPIO-0.1.0.tar.gz&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;and save it somewhere convenient. I saved it to the 'other' folder on the Desktop.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Step 3. This is a gziped tar file. Which needs unzipping and untaring. To unzip it open a Terminal, which you will find from the 'start menu' under 'accessories'. Now paste the following commands into it.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 13px; line-height: 18px;"&gt;cd&amp;nbsp;/home/pi/Desktop/other&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 13px; line-height: 18px;"&gt;gunzip&amp;nbsp;&lt;/span&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 14px; line-height: 18px;"&gt;FPi.GPIO-0.1.0.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 13px; line-height: 18px;"&gt;tar - xvf&amp;nbsp;&lt;/span&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 14px; line-height: 18px;"&gt;FPi.GPIO-0.1.0.tar&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Step 4. Install GPIO, by typing these lines in your terminal window:&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: white;"&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;span style="line-height: 18px;"&gt;cd&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 14px; line-height: 18px;"&gt;FPi.GPIO-0.1.0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;span style="line-height: 18px;"&gt;sudo python setup.py install&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Step 5. Run Python 2. You will find this from the menu under Programming - Use Python 2 not 3.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;We now need to enter some commands:&lt;br /&gt;&lt;span style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif;"&gt;&lt;span style="font-size: 14px; line-height: 18px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; import RPi.GPIO as GPIO&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; GPIO.setup(11, GPIO.OUT)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;After we enter this second command, the LED should light. That is because the pin will have been set to an output and initially be low. A low pin will light the LED, a high pin and it will turn off.&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; GPIO.output(11, True)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;This should have turned the LED back off.&lt;br /&gt;&lt;br /&gt;Let's now write a little program to make the LED blink.&lt;br /&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; import time&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt;&amp;nbsp;while True :&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; &amp;nbsp; &amp;nbsp;GPIO.output(11, True)&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; &amp;nbsp; &amp;nbsp;time.sleep(1)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace; font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; &amp;nbsp; &amp;nbsp;GPIO.output(11, False)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; &amp;nbsp; &amp;nbsp;time.sleep(1)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;Press the enter key twice. When you have had enough of the LED blinking press the key combination ctrl-C.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here is a short video of this.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;object class="BLOGGER-youtube-video" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" data-thumbnail-src="http://i.ytimg.com/vi/XdO8s_CDUAw/0.jpg" height="266" width="320"&gt;&lt;param name="movie" value="http://www.youtube.com/v/XdO8s_CDUAw?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" /&gt;  &lt;param name="bgcolor" value="#FFFFFF" /&gt;  &lt;embed width="320" height="266"  src="http://www.youtube.com/v/XdO8s_CDUAw?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" type="application/x-shockwave-flash"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;You may have noticed that the LED is connected to pin GPIO0 and not 11 as we are using in Python. The library uses&amp;nbsp;different&amp;nbsp;pin numbers to the names on the Pi. I'm not sure why. But anyway, I mapped a few of them as shown below.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;library name &amp;nbsp; &amp;nbsp; Pi name&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;11 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;12 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;13 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;After that, the mapping changes.&lt;br /&gt;&lt;br /&gt;I wanted to know how fast the GPIO library was, so I took off the LED and attached my oscilloscope to the output and then ran the following test program.&lt;/div&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; state = True&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&amp;gt;&amp;gt;&amp;gt; while True :&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GPIO.output(11, state)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state = not state&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;The 'scope measured the frequency as 800Hz. Not very fast, but fast enough for PWM and servo control.&lt;br /&gt;&lt;br /&gt;&lt;b style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;Watch out for my book 'Programming the Raspberry Pi' pub. McGraw-Hill, out towards the end of the year.&lt;/b&gt;&lt;br /&gt;&lt;span style="color: #222222; font-family: 'Courier New', Courier, monospace;"&gt;&lt;span style="font-size: 15px; line-height: 18px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.dangerouslymad.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299105242303/books/dangerous2.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="border: 0px; padding: 0px;" width="154" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.ioiobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1327145313578/books/cover1.jpg?height=200&amp;amp;width=129" style="border: 0px; padding: 0px;" width="129" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="background-color: white; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.editorialestribor.com/libros/30-proyectos-de-arduino" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1329409045803/books/Cover%2030%20Proyectos%20Arduino.gif?height=200&amp;amp;width=156" style="border: 0px; padding: 0px;" width="156" /&gt;&lt;/a&gt;&lt;span style="background-color: white; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.gadgeteerbook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1333392109262/books/cover%20med%20res.jpg?height=200&amp;amp;width=128" style="border: 0px; padding: 0px;" width="128" /&gt;&lt;/a&gt;&lt;span style="background-color: white; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.amazon.com/Practical-Electronics-Inventors-Paul-Scherz/dp/0071771336/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1336495994985/books/cover.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/9009116791081492829/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=9009116791081492829" title="9 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9009116791081492829"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9009116791081492829"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/05/gpio-led-blink-from-python-using-slice.html" title="GPIO LED blink from Python using Slice of Pi"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-3LUOiLJkQz4/T6z2ZCHa_FI/AAAAAAAAAh8/IRM1Th9bHfA/s72-c/pi_led_with_screen_sm.jpg" height="72" width="72"/>
    <thr:total>9</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-7498910911049181742</id>
    <published>2012-05-04T08:46:00.002-07:00</published>
    <updated>2012-05-04T08:46:27.461-07:00</updated>
    <title type="text">The Gadget Show Come to FabLab Mcr</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;br /&gt;&lt;a href="http://www.channel5.com/shows/the-gadget-show" target="_blank"&gt;The Gadget Show&lt;/a&gt; (channel 5) has just visited &lt;a href="http://www.fablabmanchester.org/" target="_blank"&gt;FabLab Manchester&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-Zid9dVj5LbM/T6P4l0BtTKI/AAAAAAAAAbg/SMk_j65O0aI/s1600/IMG_20120504_133833.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="239" src="http://4.bp.blogspot.com/-Zid9dVj5LbM/T6P4l0BtTKI/AAAAAAAAAbg/SMk_j65O0aI/s320/IMG_20120504_133833.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;We helped presenter Jason Bradbury develop a Frizmarang, a kind of cross between a well known brand of flying disk and a boomerang. Designed to be flown at night, it has a 3W RGB LED in a centre 3D-printed plastic insert. The module cycles through the colour spectrum. I lent a hand, designing the light insert, using an ATTiny and a 3W RGB LED, the power source is a&amp;nbsp;scavenged&amp;nbsp;battery from a dead RC helicopter.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;object width="320" height="266" class="BLOGGER-youtube-video" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" data-thumbnail-src="http://i.ytimg.com/vi/lVqadU9t-24/0.jpg"&gt;&lt;param name="movie" value="http://www.youtube.com/v/lVqadU9t-24?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" /&gt;&lt;param name="bgcolor" value="#FFFFFF" /&gt;&lt;embed width="320" height="266"  src="http://www.youtube.com/v/lVqadU9t-24?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata" type="application/x-shockwave-flash"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;The boomerang was designed in Google Sketchup and CNC milled from plywood. For the full unveil, you will have to wait for the Gadget Show in about a months time.&lt;br /&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/7498910911049181742/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=7498910911049181742" title="0 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/7498910911049181742"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/7498910911049181742"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/05/gadget-show-come-to-fablab-mcr.html" title="The Gadget Show Come to FabLab Mcr"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/-Zid9dVj5LbM/T6P4l0BtTKI/AAAAAAAAAbg/SMk_j65O0aI/s72-c/IMG_20120504_133833.jpg" height="72" width="72"/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-9026435032271015809</id>
    <published>2012-04-29T14:27:00.000-07:00</published>
    <updated>2012-07-13T06:59:32.690-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="arduino"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="python"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="raspberry pi"/>
    <title type="text">Raspberry Pi and Arduino</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;b&gt;Note. There is now a followup to this post &lt;a href="http://www.doctormonk.com/2012/07/raspberry-pi-meets-arduino-part-2.html" target="_blank"&gt;here&lt;/a&gt;.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; is creating quite a storm of interest. I have just got mine and one of the first things that I wanted to try was to get it talking to an Arduino over USB using Python.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/--IPvTykhzcw/T51aHWWeIuI/AAAAAAAAAbE/RC2MNbQisBo/s1600/boards_sm.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="282" src="http://4.bp.blogspot.com/--IPvTykhzcw/T51aHWWeIuI/AAAAAAAAAbE/RC2MNbQisBo/s400/boards_sm.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;.. and you know what? It proved to be a lot easier than I expected. This is mainly because, after all, despite its&amp;nbsp;diminutive&amp;nbsp;price tag, the Pi is just a Linux box. I got communication working both ways, with the Arduino sending 'Hello Pi' to the Pi and at the same time, testing for a digit coming in. When it receives a digit, it flashes the number of times indicated by the digit.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Arduino&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Let's start with the Arduino end. I used an Arduino Uno and Arduino software version 1.0. I haven't tried an older board, but I suspect the FTDI generation Arduinos before the Uno may have trouble with USB.&lt;br /&gt;&lt;br /&gt;Here is the sketch - paste it into a new Arduino IDE window and load it up onto your Arduino using your regular computer.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;const int ledPin = 13;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;void setup()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; pinMode(ledPin, OUTPUT);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; Serial.begin(9600);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;void loop()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; Serial.println("Hello Pi");&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; if (Serial.available())&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;flash(Serial.read() - '0');&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; delay(1000);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;void flash(int n)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; for (int i = 0; i &amp;lt; n; i++)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; digitalWrite(ledPin, HIGH);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; delay(100);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; digitalWrite(ledPin, LOW);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; delay(100);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Raspberry Pi&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;There is a Python library for serial communications called '&lt;a href="http://pyserial.sourceforge.net/"&gt;pySerial&lt;/a&gt;' which has history with Arduino. So, I stood on the shoulders of giants and adapted the instructions found &lt;a href="http://arduino.cc/playground/Interfacing/Python"&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Step 1. If you are not reading this page on your Pi, then switch now, so you can copy and paste.&lt;br /&gt;&lt;br /&gt;Step 2. Browse to &lt;a href="http://sourceforge.net/projects/pyserial/files/"&gt;here&lt;/a&gt; and download&amp;nbsp;&lt;strong style="background-attachment: initial; background-clip: initial; background-color: white; background-image: initial; background-origin: initial; border-bottom-width: 0px; border-color: initial; border-image: initial; border-left-width: 0px; border-right-width: 0px; border-style: initial; border-top-width: 0px; color: #555555; font-family: sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; outline-color: initial; outline-style: initial; outline-width: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; text-align: -webkit-auto; vertical-align: baseline;"&gt;&lt;span style="-webkit-tap-highlight-color: rgb(0, 119, 170); background-color: transparent; border-width: 0px; color: #006699; font-size: 13px; margin: 0px; outline: 0px; padding: 0px; text-decoration: none; vertical-align: baseline;"&gt;&lt;a href="http://sourceforge.net/projects/pyserial/files/latest/download?source=files" style="-webkit-tap-highlight-color: rgb(0, 119, 170); background-attachment: initial; background-clip: initial; background-color: transparent; background-image: initial; background-origin: initial; background-position: initial initial; background-repeat: initial initial; color: #006699; font-size: 13px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; outline-color: initial; outline-style: none; outline-width: initial; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; text-decoration: none; vertical-align: baseline;" title="/pyserial/2.5/pyserial-2.5.tar.gz:  released on 2010-08-03 00:36:29 UTC"&gt;pyserial-2.5.tar.gz (106.3 kB)&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;and save it somewhere convenient. I saved it to the 'other' folder on the Desktop.&lt;br /&gt;&lt;br /&gt;Step 3. This is a gziped tar file. Which needs unzipping and untaring. To unzip it open a Terminal, which you will find from the 'start menu' under 'accessories'. Now paste the following commands into it.&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;cd&amp;nbsp;/home/pi/Desktop/other&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;gunzip pyserial-2.5.tar.gz&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;tar - xvf&amp;nbsp;pyserial-2.5.tar&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Step 4. Install pySerial, by typing these lines in your terminal window:&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;cd pyserial-2.5&lt;br /&gt;sudo python setup.py install&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Step 5. Run Python 2. You will find this from the menu under Programming - Use Python 2 not 3.&lt;br /&gt;&lt;br /&gt;Thats it! Now we just need to write some Python to access the Serial port. So type the commands shown in the transcript below.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-LIUd9AyEWk0/T52sYqTPG_I/AAAAAAAAAbQ/AZyjr57-vJ8/s1600/python_crop.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="640" src="http://4.bp.blogspot.com/-LIUd9AyEWk0/T52sYqTPG_I/AAAAAAAAAbQ/AZyjr57-vJ8/s640/python_crop.png" width="602" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;You type the parts after &amp;gt;&amp;gt;&amp;gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;import serial&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;ser = serial.Serial('/dev/ttyACM0', 9600)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Note that the second argument here (9600) is the baud rate and should match whatever you put in your Arduino sketch.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;/dev/ttyACM0 is the name for the USB interface to the Uno, at least it was for my Uno. The way to discover the port name is to run the following command in the terminal without the Uno plugged in.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;ls /dev/tty*&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Then plug in your Arduio and run the command again. If there is a new name, then this is the name of your port.&lt;br /&gt;&lt;br /&gt;Now lets start a loop listening for messages from the Arduino.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;while 1 :&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;&amp;nbsp; &amp;nbsp; ser.readline()&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;You will need two hit enter twice after you type the second line. Messages should now start to appear!&lt;br /&gt;&lt;br /&gt;You can see in the Blue writing where the Arduino is talking to the Pi. Then some error trace as you press ctrl-C to interrupt the messages coming from the Arduino.&lt;br /&gt;&lt;br /&gt;When you type&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;ser.write('5')&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;you should see the LED on the Arduino flash 5 times.&lt;br /&gt;&lt;br /&gt;There are many&amp;nbsp;possibilities&amp;nbsp;here, we could put a motor shield or LCD shield onto the Arduino and control it from your Pi.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Watch out for my book 'Programming the Raspberry Pi' pub. McGraw-Hill, out towards the end of 2012.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.arduinoevilgenius.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299104958818/books/arduino.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.dangerouslymad.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1299105242303/books/dangerous2.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.arduinobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1321825934807/books/cover2.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.duinodroid.com/" rel="nofollow" style="color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1319474317478/books/cover_medium.jpg?height=200&amp;amp;width=154" style="border: 0px; padding: 0px;" width="154" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.ioiobook.com/" imageanchor="1" rel="nofollow" style="background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1327145313578/books/cover1.jpg?height=200&amp;amp;width=129" style="border: 0px; padding: 0px;" width="129" /&gt;&lt;/a&gt;&lt;span style="font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="background-color: white; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="http://www.editorialestribor.com/libros/30-proyectos-de-arduino" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1329409045803/books/Cover%2030%20Proyectos%20Arduino.gif?height=200&amp;amp;width=156" style="border: 0px; padding: 0px;" width="156" /&gt;&lt;/a&gt;&lt;span style="background-color: white; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.gadgeteerbook.com/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1333392109262/books/cover%20med%20res.jpg?height=200&amp;amp;width=128" style="border: 0px; padding: 0px;" width="128" /&gt;&lt;/a&gt;&lt;span style="background-color: white; font-family: Helvetica; font-size: 12px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href="http://www.amazon.com/Practical-Electronics-Inventors-Paul-Scherz/dp/0071771336/" imageanchor="1" rel="nofollow" style="background-color: white; background-image: none; border-bottom-style: none; color: #551a8b; font-family: Helvetica; font-size: 12px;" target="_blank"&gt;&lt;img border="0" height="200" src="https://sites.google.com/site/simonmonkorg/_/rsrc/1336495994985/books/cover.jpg?height=200&amp;amp;width=200" style="border: 0px; padding: 0px;" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/9026435032271015809/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=9026435032271015809" title="28 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9026435032271015809"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9026435032271015809"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/04/raspberry-pi-and-arduino.html" title="Raspberry Pi and Arduino"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/--IPvTykhzcw/T51aHWWeIuI/AAAAAAAAAbE/RC2MNbQisBo/s72-c/boards_sm.jpg" height="72" width="72"/>
    <thr:total>28</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-5416726460697111362.post-9031633757237126240</id>
    <published>2012-04-10T01:41:00.002-07:00</published>
    <updated>2012-04-10T01:45:56.898-07:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="steampunk"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="arduino"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="fm radio"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="attiny"/>
    <title type="text">Steampunk FM Radio - Part 2</title>
    <content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;In &lt;a href="http://www.doctormonk.com/2012/04/steampunk-fm-radio-part-1.html"&gt;my last post&lt;/a&gt; I looked at the finished project.&lt;br /&gt;&lt;br /&gt;I don't think I would recommend building it the way I describe here. There are a few unsatisfactory things about it. Mainly its difficult to tune - the pot tends to drift a little. Perhaps a vernier dial, or better a rotary encoder. It could also do with a pre-amplifier - the output from the TEA5767 just isn't that high. As a receiver, its also not that sensitive and needs a better antenna than the 2ft of solid core wire dangling out the back that I gave it. Although to be fair I live on the wrong side of a hill for good FM reception,&lt;br /&gt;&lt;br /&gt;Anyway, because I don't like to see projects without any details given of how they work, here it is, help your selves and may it inspire you to do it better.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-iwTfrQM2a2E/T4Pu8o2iLWI/AAAAAAAAAak/3Y39O3Jis2U/s1600/inside.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://3.bp.blogspot.com/-iwTfrQM2a2E/T4Pu8o2iLWI/AAAAAAAAAak/3Y39O3Jis2U/s320/inside.jpg" width="245" /&gt;&lt;/a&gt;&lt;/div&gt;It uses the amp and speaker from a&amp;nbsp;scavenged&amp;nbsp;PC USB powered speaker (right hand side) the TEA5767 module and breakout, &lt;a href="http://www.doctormonk.com/2012/03/tea5767-fm-radio-breakout-board-for.html" target="_blank"&gt;described in an earlier post&lt;/a&gt;, and a small ATTiny45 board, that has ICSP connector and a 7805 voltage regulator - from another project.&lt;br /&gt;&lt;br /&gt;Tuning is accomplished by turning the pot read by an ADC on the ATTiny. This then maps to a frequency that is sent to the&amp;nbsp;TEA5767 by I2C.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-Z4MrbXIxYaw/T4PwpOfdSuI/AAAAAAAAAas/TN3dxVYBS7I/s1600/cct.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="338" src="http://3.bp.blogspot.com/-Z4MrbXIxYaw/T4PwpOfdSuI/AAAAAAAAAas/TN3dxVYBS7I/s640/cct.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;The ATTiny is programmed using the Arduino IDE as described here&amp;nbsp;&lt;a href="http://hlt.media.mit.edu/?p=1229" style="background-color: white; color: #888888; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; text-decoration: none;" target="_blank"&gt;http://hlt.media.mit.edu/?p=1229&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;It uses the &lt;a href="http://arduino.cc/playground/Code/USIi2c" target="_blank"&gt;TinyWireM&lt;/a&gt; library to the I2C communications. Note you will need to change the header TinyWireM.h to 8MHz instead of 1. See the instructions on the link above.&lt;br /&gt;&lt;br /&gt;Here is the script:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;#include &amp;lt;TinyWireM.h&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;const int potPin = 3;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;unsigned char frequencyH = 0;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;unsigned char frequencyL = 0;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;unsigned int frequencyB;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;double frequency;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;void setup()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; TinyWireM.begin();&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; frequency = 97.4; //starting frequency&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; setFrequency();&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;void loop()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; int reading = analogRead(potPin);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; frequency = map((float)reading, 0.0, 1024.0, 87.5, 108.0);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; frequency = ((double)reading * (108.0 - 87.5)) / 1024.0 + 87.5;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; frequency = ((int)(frequency * 10)) / 10.0;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; setFrequency();&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;void setFrequency()&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; frequencyB = 4 * (frequency * 1000000 + 225000) / 32768;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; frequencyH = frequencyB &amp;gt;&amp;gt; 8;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; frequencyL = frequencyB &amp;amp; 0XFF;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; delay(100);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; TinyWireM.beginTransmission(0x60); &amp;nbsp; //writing TEA5767&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; TinyWireM.send(frequencyH);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; TinyWireM.send(frequencyL);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; TinyWireM.send(0xB0);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; TinyWireM.send(0x10);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; TinyWireM.send((byte)0x00);&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; TinyWireM.endTransmission();&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;&amp;nbsp; delay(100); &amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: 'Courier New', Courier, monospace; font-size: x-small;"&gt;}&lt;/span&gt;&lt;/div&gt;</content>
    <link rel="replies" type="application/atom+xml" href="http://www.doctormonk.com/feeds/9031633757237126240/comments/default" title="Post Comments"/>
    <link rel="replies" type="text/html" href="http://www.blogger.com/comment.g?blogID=5416726460697111362&amp;postID=9031633757237126240" title="0 Comments"/>
    <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9031633757237126240"/>
    <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/5416726460697111362/posts/default/9031633757237126240"/>
    <link rel="alternate" type="text/html" href="http://www.doctormonk.com/2012/04/steampunk-fm-radio-part-2.html" title="Steampunk FM Radio - Part 2"/>
    <author>
      <name>Simon Monk</name>
      <uri>https://plus.google.com/101649293477721768985</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh5.googleusercontent.com/-N2MPmYlzm4I/AAAAAAAAAAI/AAAAAAAADQA/3hMt81PsepY/s512-c/photo.jpg"/>
    </author>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-iwTfrQM2a2E/T4Pu8o2iLWI/AAAAAAAAAak/3Y39O3Jis2U/s72-c/inside.jpg" height="72" width="72"/>
    <thr:total>0</thr:total>
  </entry>
</feed>
